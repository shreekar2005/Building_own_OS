<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a04376" xml:lang="en-US">
<title>essential Namespace Reference</title>
<indexterm><primary>essential</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_a05281">atexit_func_entry_t</link></para>
</listitem>
            <listitem><para>class <link linkend="_a05277">GDT</link></para>
</listitem>
            <listitem><para>class <link linkend="_a05273">GDT_row</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_a05273">essential::GDT_row</link> <link linkend="_a04376_1a52e3ec8c29cc4bb68f65445749f0bfdb">__attribute__</link> ((packed))</para>
</listitem>
            <listitem><para>void <link linkend="_a04376_1a433c3d2d19d89890b522ac26b05fa7aa">__callConstructors</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_a04376_1a098e7240e26e869c035075be004b4ee9">__cxa_finalize</link> (void *f)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_a04376_1a52e3ec8c29cc4bb68f65445749f0bfdb"/><section>
    <title>__attribute__()</title>
<indexterm><primary>__attribute__</primary><secondary>essential</secondary></indexterm>
<indexterm><primary>essential</primary><secondary>__attribute__</secondary></indexterm>
<para><computeroutput>class <link linkend="_a05277">essential::GDT</link> essential::__attribute__ ((packed) )</computeroutput></para></section>
<anchor xml:id="_a04376_1a433c3d2d19d89890b522ac26b05fa7aa"/><section>
    <title>__callConstructors()</title>
<indexterm><primary>__callConstructors</primary><secondary>essential</secondary></indexterm>
<indexterm><primary>essential</primary><secondary>__callConstructors</secondary></indexterm>
<para><computeroutput>void essential::__callConstructors ( )</computeroutput></para><para>
Definition at line <link linkend="_a04292_source_1l00006">6</link> of file <link linkend="_a04292_source">kicxxabi.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00007 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;(**p)()&#32;=&#32;&amp;<link linkend="_a04292_1a201d805094c80d48f8ee4e49ee85fb74">ctors_start</link>;&#32;p&#32;&lt;&#32;&amp;<link linkend="_a04292_1a9a50b36f9886cd6bdbe05a5a6639cd95">ctors_end</link>;&#32;++p)
00008 &#32;&#32;&#32;&#32;{
00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*p)();&#32;<emphasis role="comment">//&#32;Call&#32;the&#32;constructor</emphasis>
00010 &#32;&#32;&#32;&#32;}
00011 }
</programlisting><para>
References <link linkend="_a04292_source_1l00005">ctors_end</link>, and <link linkend="_a04292_source_1l00004">ctors_start</link>.</para>
<para>
Referenced by <link linkend="_a04304_source_1l00085">kernelMain()</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d0/de0/a04376_a433c3d2d19d89890b522ac26b05fa7aa_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_a04376_1a098e7240e26e869c035075be004b4ee9"/><section>
    <title>__cxa_finalize()</title>
<indexterm><primary>__cxa_finalize</primary><secondary>essential</secondary></indexterm>
<indexterm><primary>essential</primary><secondary>__cxa_finalize</secondary></indexterm>
<para><computeroutput>void essential::__cxa_finalize (void * f)</computeroutput></para><para>
Definition at line <link linkend="_a04292_source_1l00040">40</link> of file <link linkend="_a04292_source">kicxxabi.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00041 {
00042 &#32;&#32;&#32;&#32;<link linkend="_a04364_1a35fc01d4eba01f3f2ec636bd6b5ff34f">uarch_t</link>&#32;i&#32;=&#32;<link linkend="_a04292_1a0f75f529cf75cf0a9cd266f8d67675dc">__atexit_func_count</link>;
00043 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!f)
00044 &#32;&#32;&#32;&#32;{
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
00046 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;According&#32;to&#32;the&#32;Itanium&#32;C++&#32;ABI,&#32;if&#32;essential::__cxa_finalize&#32;is&#32;called&#32;without&#32;a</emphasis>
00047 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;function&#32;ptr,&#32;then&#32;it&#32;means&#32;that&#32;we&#32;should&#32;destroy&#32;EVERYTHING&#32;MUAHAHAHA!!</emphasis>
00048 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00049 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;TODO:</emphasis>
00050 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Note&#32;well,&#32;however,&#32;that&#32;deleting&#32;a&#32;function&#32;from&#32;here&#32;that&#32;contains&#32;a&#32;__dso_handle</emphasis>
00051 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;means&#32;that&#32;one&#32;link&#32;to&#32;a&#32;shared&#32;object&#32;file&#32;has&#32;been&#32;terminated.&#32;In&#32;other&#32;words,</emphasis>
00052 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;We&#32;should&#32;monitor&#32;this&#32;list&#32;(optional,&#32;of&#32;course),&#32;since&#32;it&#32;tells&#32;us&#32;how&#32;many&#32;links&#32;to&#32;</emphasis>
00053 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;an&#32;object&#32;file&#32;exist&#32;at&#32;runtime&#32;in&#32;a&#32;particular&#32;application.&#32;This&#32;can&#32;be&#32;used&#32;to&#32;tell&#32;</emphasis>
00054 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;when&#32;a&#32;shared&#32;object&#32;is&#32;no&#32;longer&#32;in&#32;use.&#32;It&#32;is&#32;one&#32;of&#32;many&#32;methods,&#32;however.</emphasis>
00055 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;**/</emphasis>
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//You&#32;may&#32;insert&#32;a&#32;prinf()&#32;here&#32;to&#32;tell&#32;you&#32;whether&#32;or&#32;not&#32;the&#32;function&#32;gets&#32;called.&#32;Testing</emphasis>
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//is&#32;CRITICAL!</emphasis>
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(i--)
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_a04292_1a05a64060e9039acf0ba3c311b2d981b7">__atexit_funcs</link>[i].destructor_func)
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;^^^&#32;That&#32;if&#32;statement&#32;is&#32;a&#32;safeguard...</emphasis>
00063 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;To&#32;make&#32;sure&#32;we&#32;don&apos;t&#32;call&#32;any&#32;entries&#32;that&#32;have&#32;already&#32;been&#32;called&#32;and&#32;unset&#32;at&#32;runtime.</emphasis>
00064 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Those&#32;will&#32;contain&#32;a&#32;value&#32;of&#32;0,&#32;and&#32;calling&#32;a&#32;function&#32;with&#32;value&#32;0</emphasis>
00065 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;will&#32;cause&#32;undefined&#32;behaviour.&#32;Remember&#32;that&#32;linear&#32;address&#32;0,&#32;</emphasis>
00066 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;in&#32;a&#32;non-virtual&#32;address&#32;space&#32;(physical)&#32;contains&#32;the&#32;IVT&#32;and&#32;BDA.</emphasis>
00067 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00068 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;In&#32;a&#32;virtual&#32;environment,&#32;the&#32;kernel&#32;will&#32;receive&#32;a&#32;page&#32;fault,&#32;and&#32;then&#32;probably</emphasis>
00069 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;map&#32;in&#32;some&#32;trash,&#32;or&#32;a&#32;blank&#32;page,&#32;or&#32;something&#32;stupid&#32;like&#32;that.</emphasis>
00070 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;This&#32;will&#32;result&#32;in&#32;the&#32;processor&#32;executing&#32;trash,&#32;and...we&#32;don&apos;t&#32;want&#32;that.</emphasis>
00071 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;**/</emphasis>
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*<link linkend="_a04292_1a05a64060e9039acf0ba3c311b2d981b7">__atexit_funcs</link>[i].<link linkend="_a05281_1a665175c477008154e9b40ef96a8d81c2">destructor_func</link>)(<link linkend="_a04292_1a05a64060e9039acf0ba3c311b2d981b7">__atexit_funcs</link>[i].obj_ptr);
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00076 &#32;&#32;&#32;&#32;};
00077 
00078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(i--)
00079 &#32;&#32;&#32;&#32;{
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
00081 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;The&#32;ABI&#32;states&#32;that&#32;multiple&#32;calls&#32;to&#32;the&#32;__cxa_finalize(destructor_func_ptr)&#32;function</emphasis>
00082 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;should&#32;not&#32;destroy&#32;objects&#32;multiple&#32;times.&#32;Only&#32;one&#32;call&#32;is&#32;needed&#32;to&#32;eliminate&#32;multiple</emphasis>
00083 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;entries&#32;with&#32;the&#32;same&#32;address.</emphasis>
00084 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00085 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;FIXME:</emphasis>
00086 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;This&#32;presents&#32;the&#32;obvious&#32;problem:&#32;all&#32;destructors&#32;must&#32;be&#32;stored&#32;in&#32;the&#32;order&#32;they</emphasis>
00087 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;were&#32;placed&#32;in&#32;the&#32;list.&#32;I.e:&#32;the&#32;last&#32;initialized&#32;object&apos;s&#32;destructor&#32;must&#32;be&#32;first</emphasis>
00088 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;in&#32;the&#32;list&#32;of&#32;destructors&#32;to&#32;be&#32;called.&#32;But&#32;removing&#32;a&#32;destructor&#32;from&#32;the&#32;list&#32;at&#32;runtime</emphasis>
00089 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;creates&#32;holes&#32;in&#32;the&#32;table&#32;with&#32;unfilled&#32;entries.</emphasis>
00090 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Remember&#32;that&#32;the&#32;insertion&#32;algorithm&#32;in&#32;__cxa_atexit&#32;simply&#32;inserts&#32;the&#32;next&#32;destructor</emphasis>
00091 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;at&#32;the&#32;end&#32;of&#32;the&#32;table.&#32;So,&#32;we&#32;have&#32;holes&#32;with&#32;our&#32;current&#32;algorithm</emphasis>
00092 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;This&#32;function&#32;should&#32;be&#32;modified&#32;to&#32;move&#32;all&#32;the&#32;destructors&#32;above&#32;the&#32;one&#32;currently</emphasis>
00093 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;being&#32;called&#32;and&#32;removed&#32;one&#32;place&#32;down&#32;in&#32;the&#32;list,&#32;so&#32;as&#32;to&#32;cover&#32;up&#32;the&#32;hole.</emphasis>
00094 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Otherwise,&#32;whenever&#32;a&#32;destructor&#32;is&#32;called&#32;and&#32;removed,&#32;an&#32;entire&#32;space&#32;in&#32;the&#32;table&#32;is&#32;wasted.</emphasis>
00095 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;**/</emphasis>
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_a04292_1a05a64060e9039acf0ba3c311b2d981b7">__atexit_funcs</link>[i].destructor_func&#32;==&#32;f)
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;</emphasis>
00099 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Note&#32;that&#32;in&#32;the&#32;next&#32;line,&#32;not&#32;every&#32;destructor&#32;function&#32;is&#32;a&#32;class&#32;destructor.</emphasis>
00100 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;It&#32;is&#32;perfectly&#32;legal&#32;to&#32;register&#32;a&#32;non&#32;class&#32;destructor&#32;function&#32;as&#32;a&#32;simple&#32;cleanup</emphasis>
00101 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;function&#32;to&#32;be&#32;called&#32;on&#32;program&#32;termination,&#32;in&#32;which&#32;case,&#32;it&#32;would&#32;not&#32;NEED&#32;an</emphasis>
00102 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;object&#32;This&#32;pointer.&#32;A&#32;smart&#32;programmer&#32;may&#32;even&#32;take&#32;advantage&#32;of&#32;this&#32;and&#32;register</emphasis>
00103 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;a&#32;C&#32;function&#32;in&#32;the&#32;table&#32;with&#32;the&#32;address&#32;of&#32;some&#32;structure&#32;containing&#32;data&#32;about</emphasis>
00104 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;what&#32;to&#32;clean&#32;up&#32;on&#32;exit.</emphasis>
00105 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;In&#32;the&#32;case&#32;of&#32;a&#32;function&#32;that&#32;takes&#32;no&#32;arguments,&#32;it&#32;will&#32;simply&#32;be&#32;ignore&#32;within&#32;the</emphasis>
00106 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;function&#32;itself.&#32;No&#32;worries.</emphasis>
00107 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;**/</emphasis>
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*<link linkend="_a04292_1a05a64060e9039acf0ba3c311b2d981b7">__atexit_funcs</link>[i].<link linkend="_a05281_1a665175c477008154e9b40ef96a8d81c2">destructor_func</link>)(<link linkend="_a04292_1a05a64060e9039acf0ba3c311b2d981b7">__atexit_funcs</link>[i].obj_ptr);
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a04292_1a05a64060e9039acf0ba3c311b2d981b7">__atexit_funcs</link>[i].<link linkend="_a05281_1a665175c477008154e9b40ef96a8d81c2">destructor_func</link>&#32;=&#32;0;
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
00112 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Notice&#32;that&#32;we&#32;didn&apos;t&#32;decrement&#32;__atexit_func_count:&#32;this&#32;is&#32;because&#32;this&#32;algorithm</emphasis>
00113 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;requires&#32;patching&#32;to&#32;deal&#32;with&#32;the&#32;FIXME&#32;outlined&#32;above.</emphasis>
00114 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;**/</emphasis>
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
00116 &#32;&#32;&#32;&#32;};
00117 };
</programlisting><para>
References <link linkend="_a04292_source_1l00025">__atexit_func_count</link>, <link linkend="_a04292_source_1l00024">__atexit_funcs</link>, and <link linkend="_a04364_source_1l00014">essential::atexit_func_entry_t::destructor_func</link>.</para>
<para>
Referenced by <link linkend="_a04304_source_1l00085">kernelMain()</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d0/de0/a04376_a098e7240e26e869c035075be004b4ee9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
