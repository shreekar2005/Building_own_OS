<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a06608_source" xml:lang="en-US">
<title>kmemory.cpp</title>
<indexterm><primary>libk_src/basic/kmemory.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_a06608_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_a06686">basic/kmemory.hpp</link>&quot;</emphasis>
<anchor xml:id="_a06608_source_1l00002"/>00002 
<anchor xml:id="_a06608_source_1l00003"/><link linkend="_a06717_1a53c6425a55d9fb93998da01f2416f9ad">00003</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_a06717_1a53c6425a55d9fb93998da01f2416f9ad">basic::__printMemoryMap</link>(multiboot_info_t&#32;*mbi)
<anchor xml:id="_a06608_source_1l00004"/>00004 {
<anchor xml:id="_a06608_source_1l00005"/>00005 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;memory&#32;map&#32;flag&#32;is&#32;set&#32;(bit&#32;6)</emphasis>
<anchor xml:id="_a06608_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(mbi-&gt;flags&#32;&amp;&#32;(1&#32;&lt;&lt;&#32;6)))&#32;{
<anchor xml:id="_a06608_source_1l00007"/>00007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a06717_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;\nError:&#32;Memory&#32;map&#32;not&#32;provided&#32;by&#32;bootloader.\n&quot;</emphasis>);
<anchor xml:id="_a06608_source_1l00008"/>00008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_a06608_source_1l00009"/>00009 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a06608_source_1l00010"/>00010 
<anchor xml:id="_a06608_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<link linkend="_a06717_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;\n---&#32;System&#32;Memory&#32;Map&#32;---\n&quot;</emphasis>);
<anchor xml:id="_a06608_source_1l00012"/>00012 &#32;&#32;&#32;&#32;
<anchor xml:id="_a06608_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;uint64_t&#32;to&#32;correctly&#32;accumulate&#32;total&#32;memory&#32;size</emphasis>
<anchor xml:id="_a06608_source_1l00014"/>00014 &#32;&#32;&#32;&#32;uint64_t&#32;total_available_bytes&#32;=&#32;0;
<anchor xml:id="_a06608_source_1l00015"/>00015 &#32;&#32;&#32;&#32;
<anchor xml:id="_a06608_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;uintptr_t&#32;for&#32;pointer&#32;arithmetic&#32;to&#32;ensure&#32;portability</emphasis>
<anchor xml:id="_a06608_source_1l00017"/>00017 &#32;&#32;&#32;&#32;uintptr_t&#32;mmap_start&#32;=&#32;mbi-&gt;mmap_addr;
<anchor xml:id="_a06608_source_1l00018"/>00018 &#32;&#32;&#32;&#32;uintptr_t&#32;mmap_end&#32;=&#32;mbi-&gt;mmap_addr&#32;+&#32;mbi-&gt;mmap_length;
<anchor xml:id="_a06608_source_1l00019"/>00019 
<anchor xml:id="_a06608_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(multiboot_memory_map_t&#32;*mmap&#32;=&#32;(multiboot_memory_map_t&#32;*)mmap_start;
<anchor xml:id="_a06608_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uintptr_t)mmap&#32;&lt;&#32;mmap_end;
<anchor xml:id="_a06608_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mmap&#32;=&#32;(multiboot_memory_map_t&#32;*)((uintptr_t)mmap&#32;+&#32;mmap-&gt;size&#32;+&#32;<emphasis role="keyword">sizeof</emphasis>(mmap-&gt;size)))
<anchor xml:id="_a06608_source_1l00023"/>00023 &#32;&#32;&#32;&#32;{
<anchor xml:id="_a06608_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*type_str;
<anchor xml:id="_a06608_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(mmap-&gt;type)
<anchor xml:id="_a06608_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_a06608_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_a06683_1a7fe141351ebcde0acbd6118ad0ea1a21">MULTIBOOT_MEMORY_AVAILABLE</link>:
<anchor xml:id="_a06608_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type_str&#32;=&#32;<emphasis role="stringliteral">&quot;Available&quot;</emphasis>;
<anchor xml:id="_a06608_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total_available_bytes&#32;+=&#32;mmap-&gt;len;
<anchor xml:id="_a06608_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_a06608_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_a06683_1a0299aedc71e1f6707181471bafb18e7c">MULTIBOOT_MEMORY_RESERVED</link>:
<anchor xml:id="_a06608_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type_str&#32;=&#32;<emphasis role="stringliteral">&quot;Reserved&quot;</emphasis>;
<anchor xml:id="_a06608_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_a06608_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_a06683_1af35be82586f332a561d00207c937ee57">MULTIBOOT_MEMORY_ACPI_RECLAIMABLE</link>:
<anchor xml:id="_a06608_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type_str&#32;=&#32;<emphasis role="stringliteral">&quot;ACPI&#32;Reclaimable&quot;</emphasis>;
<anchor xml:id="_a06608_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_a06608_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_a06683_1a68f78286f7434d373a82f1b6f6473c72">MULTIBOOT_MEMORY_NVS</link>:
<anchor xml:id="_a06608_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type_str&#32;=&#32;<emphasis role="stringliteral">&quot;NVS&quot;</emphasis>;
<anchor xml:id="_a06608_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_a06608_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_a06683_1a1604ec18ac949d88dab993904b08c075">MULTIBOOT_MEMORY_BADRAM</link>:
<anchor xml:id="_a06608_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type_str&#32;=&#32;<emphasis role="stringliteral">&quot;Bad&#32;RAM&quot;</emphasis>;
<anchor xml:id="_a06608_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_a06608_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="_a06608_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type_str&#32;=&#32;<emphasis role="stringliteral">&quot;Unknown&quot;</emphasis>;
<anchor xml:id="_a06608_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_a06608_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_a06608_source_1l00047"/>00047 
<anchor xml:id="_a06608_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;%#llx&#32;for&#32;64-bit&#32;hex&#32;values&#32;(address&#32;and&#32;length)</emphasis>
<anchor xml:id="_a06608_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a06717_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;Addr:&#32;%#llx&#32;|&#32;Len:&#32;%.2fKB&#32;|&#32;Type:&#32;%s\n&quot;</emphasis>,&#32;mmap-&gt;addr,&#32;mmap-&gt;len/1024.0,&#32;type_str);
<anchor xml:id="_a06608_source_1l00050"/>00050 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a06608_source_1l00051"/>00051 &#32;&#32;&#32;&#32;
<anchor xml:id="_a06608_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;floating&#32;point&#32;for&#32;the&#32;final&#32;calculation&#32;and&#32;display</emphasis>
<anchor xml:id="_a06608_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;total_mb&#32;=&#32;total_available_bytes&#32;/&#32;1024.0;
<anchor xml:id="_a06608_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<link linkend="_a06717_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;Total&#32;available&#32;memory:&#32;%.2f&#32;KB\n\n&quot;</emphasis>,&#32;total_mb);
<anchor xml:id="_a06608_source_1l00055"/>00055 }
<anchor xml:id="_a06608_source_1l00056"/>00056 
<anchor xml:id="_a06608_source_1l00057"/>00057 
<anchor xml:id="_a06608_source_1l00065"/><link linkend="_a06608_1a1a7f24760c8c7ad3bfcd54856d906fc2">00065</link> <emphasis role="keywordtype">void</emphasis>*&#32;<emphasis role="keyword">operator</emphasis>&#32;<emphasis role="keyword">new</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_a06683_1a6d813a0f2b5281b18dea3f4cda696c33">size</link>)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_a06608_source_1l00066"/>00066 &#32;&#32;&#32;&#32;(void)<link linkend="_a06683_1a6d813a0f2b5281b18dea3f4cda696c33">size</link>;
<anchor xml:id="_a06608_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_a06608_source_1l00068"/>00068 }
<anchor xml:id="_a06608_source_1l00069"/>00069 
<anchor xml:id="_a06608_source_1l00070"/><link linkend="_a06608_1aa75472ab4b765cf6f6b5b0ebcd4a28c8">00070</link> <emphasis role="keywordtype">void</emphasis>*&#32;<emphasis role="keyword">operator</emphasis>&#32;<emphasis role="keyword">new</emphasis>[](<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_a06683_1a6d813a0f2b5281b18dea3f4cda696c33">size</link>)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_a06608_source_1l00071"/>00071 &#32;&#32;&#32;&#32;(void)<link linkend="_a06683_1a6d813a0f2b5281b18dea3f4cda696c33">size</link>;
<anchor xml:id="_a06608_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_a06608_source_1l00073"/>00073 }
<anchor xml:id="_a06608_source_1l00074"/>00074 
<anchor xml:id="_a06608_source_1l00075"/><link linkend="_a06608_1afa145befcf5e7b83424408ca503c8637">00075</link> <emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;<emphasis role="keyword">delete</emphasis>(<emphasis role="keywordtype">void</emphasis>*&#32;ptr)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_a06608_source_1l00076"/>00076 &#32;&#32;&#32;&#32;(void)ptr;
<anchor xml:id="_a06608_source_1l00077"/>00077 }
<anchor xml:id="_a06608_source_1l00078"/>00078 
<anchor xml:id="_a06608_source_1l00079"/><link linkend="_a06608_1af057efbdbcd21ea12954d49cd2d245c6">00079</link> <emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;<emphasis role="keyword">delete</emphasis>(<emphasis role="keywordtype">void</emphasis>*&#32;ptr,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_a06683_1a6d813a0f2b5281b18dea3f4cda696c33">size</link>)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_a06608_source_1l00080"/>00080 &#32;&#32;&#32;&#32;(void)ptr;
<anchor xml:id="_a06608_source_1l00081"/>00081 &#32;&#32;&#32;&#32;(void)<link linkend="_a06683_1a6d813a0f2b5281b18dea3f4cda696c33">size</link>;
<anchor xml:id="_a06608_source_1l00082"/>00082 }
<anchor xml:id="_a06608_source_1l00083"/>00083 
<anchor xml:id="_a06608_source_1l00084"/><link linkend="_a06608_1a22aea74a1155aa798d6032da46da2391">00084</link> <emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;<emphasis role="keyword">delete</emphasis>[](<emphasis role="keywordtype">void</emphasis>*&#32;ptr)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_a06608_source_1l00085"/>00085 &#32;&#32;&#32;&#32;(void)ptr;
<anchor xml:id="_a06608_source_1l00086"/>00086 }
<anchor xml:id="_a06608_source_1l00087"/>00087 
<anchor xml:id="_a06608_source_1l00088"/><link linkend="_a06608_1ab26fe706b29fdeb33d5f6ead76c05815">00088</link> <emphasis role="keywordtype">void</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;<emphasis role="keyword">delete</emphasis>[](<emphasis role="keywordtype">void</emphasis>*&#32;ptr,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_a06683_1a6d813a0f2b5281b18dea3f4cda696c33">size</link>)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_a06608_source_1l00089"/>00089 &#32;&#32;&#32;&#32;(void)ptr;
<anchor xml:id="_a06608_source_1l00090"/>00090 &#32;&#32;&#32;&#32;(void)<link linkend="_a06683_1a6d813a0f2b5281b18dea3f4cda696c33">size</link>;
<anchor xml:id="_a06608_source_1l00091"/>00091 }
</programlisting></section>
