<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d2/d5b/a06620" kind="file" language="C++">
    <compoundname>kinterrupt.cpp</compoundname>
    <includes refid="da/dee/a06692" local="yes">hardware_communication/kinterrupt.hpp</includes>
    <incdepgraph>
      <node id="4">
        <label>basic/kiostream.hpp</label>
        <link refid="d7/da9/a06689"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>essential/kgdt.hpp</label>
        <link refid="d5/dee/a06710"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hardware_communication/kinterrupt.hpp</label>
        <link refid="da/dee/a06692"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>hardware_communication/kport.hpp</label>
        <link refid="d6/dbb/a06695"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>libk_src/hardware_communication/kinterrupt.cpp</label>
        <link refid="d2/d5b/a06620"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstdarg</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="d2/d5b/a06620_1a1df59a6c3578a3d5d96bfef4ffd8fbc8" prot="public" static="yes" mutable="no">
        <type><ref refid="da/d2a/a07636" kindref="compound">hardware_communication::InterruptManager</ref> *</type>
        <definition>hardware_communication::InterruptManager* installed_interrupt_manager</definition>
        <argsstring></argsstring>
        <name>installed_interrupt_manager</name>
        <initializer>=nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libk_src/hardware_communication/kinterrupt.cpp" line="90" column="49" bodyfile="libk_src/hardware_communication/kinterrupt.cpp" bodystart="90" bodyend="-1"/>
        <referencedby refid="da/d2a/a07636_1a2d3ef1656e1eaaf86be40a200a49a4b2" compoundref="d2/d5b/a06620" startline="169" endline="186">hardware_communication::InterruptManager::handleInterrupt</referencedby>
        <referencedby refid="da/d2a/a07636_1a81d593116320da32f1aa4057087f1e11" compoundref="d2/d5b/a06620" startline="91" endline="104">hardware_communication::InterruptManager::installTable</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/dee/a06692" kindref="compound">hardware_communication/kinterrupt.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>pointer<sp/>to<sp/>the<sp/>active<sp/>interrupt<sp/>manager<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>allows<sp/>our<sp/>static<sp/>C-style<sp/>handlers<sp/>to<sp/>access<sp/>the<sp/>C++<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>definitions<sp/>of<sp/>handlers<sp/>(which<sp/>are<sp/>made<sp/>.global<sp/>in<sp/>interruptstubs.s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>need<sp/>to<sp/>be<sp/>declared<sp/>extern<sp/>&quot;C&quot;<sp/>to<sp/>prevent<sp/>C++<sp/>name<sp/>mangling,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ensuring<sp/>the<sp/>linker<sp/>can<sp/>find<sp/>the<sp/>simple<sp/>names<sp/>defined<sp/>in<sp/>assembly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="de/def/a07628_1a134c8931dff43e766f1ddc4d0f35cd48" refkind="member"><highlight class="normal"><ref refid="de/def/a07628_1a134c8931dff43e766f1ddc4d0f35cd48" kindref="member">hardware_communication::InterruptHandler::InterruptHandler</ref>(uint8_t<sp/>interruptNumber,<sp/><ref refid="da/d2a/a07636" kindref="compound">hardware_communication::InterruptManager</ref>*<sp/>interrupt_manager){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;interruptNumber=<ref refid="de/def/a07628_1afeede822d3e98957e76e627a54ec2f7a" kindref="member">interruptNumber</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;interrupt_manager=<ref refid="de/def/a07628_1ae86f4eae0ce9272b2027d44bdfd71e33" kindref="member">interrupt_manager</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/def/a07628_1ae86f4eae0ce9272b2027d44bdfd71e33" kindref="member">interrupt_manager</ref>-&gt;<ref refid="da/d2a/a07636_1ac8aba191e612ad605b8b188f78e65d3b" kindref="member">handlers</ref>[<ref refid="de/def/a07628_1afeede822d3e98957e76e627a54ec2f7a" kindref="member">interruptNumber</ref>]=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16" refid="de/def/a07628_1a5114528f0db9926365b345337e42af9b" refkind="member"><highlight class="normal"><ref refid="de/def/a07628_1a5114528f0db9926365b345337e42af9b" kindref="member">hardware_communication::InterruptHandler::~InterruptHandler</ref>(){</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(interrupt_manager-&gt;handlers[interruptNumber]==</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>interrupt_manager-&gt;handlers[interruptNumber]=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uintptr_t<sp/>InterruptHandler::handleInterrupt(uintptr_t<sp/>esp){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>esp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="db/d82/a07632_1a5149970639d0f251d529808a192b4b55" refkind="member"><highlight class="normal"><ref refid="db/d82/a07632_1a5149970639d0f251d529808a192b4b55" kindref="member">hardware_communication::IDT_row::IDT_row</ref>(){}</highlight></codeline>
<codeline lineno="25" refid="db/d82/a07632_1a9cad760dfa1c1f76f98b6207365f7e2d" refkind="member"><highlight class="normal"><ref refid="db/d82/a07632_1a9cad760dfa1c1f76f98b6207365f7e2d" kindref="member">hardware_communication::IDT_row::~IDT_row</ref>(){}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="db/d13/a07648" kindref="compound">hardware_communication::Port8BitSlow</ref><sp/><ref refid="da/d2a/a07636_1acb04723d03d6b34abbc5f7407cab0b33" kindref="member">hardware_communication::InterruptManager::picMasterCommand</ref>(0x20);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="db/d13/a07648" kindref="compound">hardware_communication::Port8BitSlow</ref><sp/><ref refid="da/d2a/a07636_1a5287e31a546f60708b085b387332a904" kindref="member">hardware_communication::InterruptManager::picMasterData</ref>(0x21);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="db/d13/a07648" kindref="compound">hardware_communication::Port8BitSlow</ref><sp/><ref refid="da/d2a/a07636_1afed9d24b37c8f9386a71f4284b2502a4" kindref="member">hardware_communication::InterruptManager::picSlaveCommand</ref>(0xA0);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="db/d13/a07648" kindref="compound">hardware_communication::Port8BitSlow</ref><sp/><ref refid="da/d2a/a07636_1ac1111b7cfbd27b37f03a0678ae5dbaf1" kindref="member">hardware_communication::InterruptManager::picSlaveData</ref>(0xA1);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="da/d2a/a07636_1aec70c703cac64ef1eec4b5a94d2e145c" refkind="member"><highlight class="normal"><ref refid="da/d2a/a07636_1aec70c703cac64ef1eec4b5a94d2e145c" kindref="member">hardware_communication::InterruptManager::InterruptManager</ref>(<ref refid="d1/d36/a07620" kindref="compound">essential::GDT</ref>*<sp/>gdt){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ICW1:<sp/>Start<sp/>Initialization<sp/>Sequence.<sp/>Both<sp/>PICs<sp/>are<sp/>told<sp/>to<sp/>listen<sp/>for<sp/>3<sp/>more<sp/>bytes<sp/>of<sp/>config<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>picMasterCommand.write(0x11);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>picSlaveCommand.write(0x11);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ICW2:<sp/>Vector<sp/>Remapping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Master<sp/>is<sp/>told<sp/>to<sp/>remap<sp/>its<sp/>IRQs<sp/>(0-7)<sp/>to<sp/>CPU<sp/>vectors<sp/>0x20-0x27.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>picMasterData.write(0x20);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slave<sp/>is<sp/>told<sp/>to<sp/>remap<sp/>its<sp/>IRQs<sp/>(8-15)<sp/>to<sp/>CPU<sp/>vectors<sp/>0x28-0x2F.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>picSlaveData.write(0x28);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ICW3:<sp/>Chaining<sp/>Configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Master<sp/>is<sp/>told<sp/>a<sp/>slave<sp/>is<sp/>connected<sp/>on<sp/>its<sp/>IRQ<sp/>2<sp/>line<sp/>(0x04<sp/>=<sp/>bit<sp/>2<sp/>set).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>picMasterData.write(0x04);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slave<sp/>is<sp/>told<sp/>its<sp/>identity<sp/>is<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>picSlaveData.write(0x02);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ICW4:<sp/>Environment<sp/>Information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>are<sp/>told<sp/>to<sp/>operate<sp/>in<sp/>standard<sp/>&quot;8086/88&quot;<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>picMasterData.write(0x01);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>picSlaveData.write(0x01);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OCW1:<sp/>Interrupt<sp/>Masking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>final<sp/>step,<sp/>enabling<sp/>all<sp/>interrupts<sp/>by<sp/>writing<sp/>a<sp/>mask<sp/>of<sp/>all<sp/>zeros.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>picMasterData.write(0x00);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>picSlaveData.write(0x00);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/dee/a06710_1ad516e6ff5b7dd7f6ce2946c527ddb8b9" kindref="member">base</ref>=(uintptr_t)&amp;interruptDescriptorTable;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/dee/a06710_1ab28e82ae69032cb4ad3ec3a0be3d7129" kindref="member">limit</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(interruptDescriptorTable)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>kernelCSselectorOffset<sp/>=<sp/>gdt-&gt;<ref refid="d1/d36/a07620_1a89a8d2c17e3c22e7200bff09252f46e1" kindref="member">kernel_CS_selector</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>IDT_INTERRUPT_GATE=0xE;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;256;<sp/>i++){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIDTEntry(i,<sp/>kernelCSselectorOffset,<sp/>&amp;<ref refid="da/dee/a06692_1a07e074bde074261858311b014bc2b398" kindref="member">ignoreInterrupt</ref>,<sp/>0,<sp/>IDT_INTERRUPT_GATE);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>handlers<sp/>for<sp/>hardware<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>setIDTEntry(0x20,<sp/>kernelCSselectorOffset,<sp/>&amp;<ref refid="da/dee/a06692_1adf60fad10b12cc19ad193c928d36445c" kindref="member">handleIRQ0x00</ref>,<sp/>0,<sp/>IDT_INTERRUPT_GATE);<sp/></highlight><highlight class="comment">//<sp/>Timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>setIDTEntry(0x21,<sp/>kernelCSselectorOffset,<sp/>&amp;<ref refid="da/dee/a06692_1a6498ed740318b424aaae4db1f223e558" kindref="member">handleIRQ0x01</ref>,<sp/>0,<sp/>IDT_INTERRUPT_GATE);<sp/></highlight><highlight class="comment">//<sp/>Keyboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>setIDTEntry(0x2C,<sp/>kernelCSselectorOffset,<sp/>&amp;<ref refid="da/dee/a06692_1a996c60cc7e88bb1c85505c19f6c35117" kindref="member">handleIRQ0x0C</ref>,<sp/>0,<sp/>IDT_INTERRUPT_GATE);<sp/></highlight><highlight class="comment">//<sp/>PS/2<sp/>Mouse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="da/d2a/a07636_1a65276f26b5d5197482a415b83a898560" refkind="member"><highlight class="normal"><ref refid="da/d2a/a07636_1a65276f26b5d5197482a415b83a898560" kindref="member">hardware_communication::InterruptManager::~InterruptManager</ref>(){}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="da/d2a/a07636_1af448c0d55d2e226050b7f4efb6d4abe8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d2a/a07636_1af448c0d55d2e226050b7f4efb6d4abe8" kindref="member">hardware_communication::InterruptManager::setIDTEntry</ref>(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>interruptNumber,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>codeSegmentSelectorOffset,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*handler)(),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>DescriptorPrivilegeLever,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>DescriptorType){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>IDT_DESC_PRESET=<sp/>0x80;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interruptDescriptorTable[interruptNumber].handlerAddressLowbits=(uint32_t)handler<sp/>&amp;<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interruptDescriptorTable[interruptNumber].handlerAddressHighbits=((uint32_t)handler<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interruptDescriptorTable[interruptNumber].reserved=0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interruptDescriptorTable[interruptNumber].access=IDT_DESC_PRESET<sp/>|<sp/>DescriptorType<sp/>|<sp/>((DescriptorPrivilegeLever<sp/>&amp;<sp/>3)<sp/>&lt;&lt;<sp/>5);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interruptDescriptorTable[interruptNumber].kernelCodeSegmentSelector=codeSegmentSelectorOffset;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="d2/d5b/a06620_1a1df59a6c3578a3d5d96bfef4ffd8fbc8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="da/d2a/a07636" kindref="compound">hardware_communication::InterruptManager</ref>*<sp/><ref refid="d2/d5b/a06620_1a1df59a6c3578a3d5d96bfef4ffd8fbc8" kindref="member">installed_interrupt_manager</ref>=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91" refid="da/d2a/a07636_1a81d593116320da32f1aa4057087f1e11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d2a/a07636_1a81d593116320da32f1aa4057087f1e11" kindref="member">hardware_communication::InterruptManager::installTable</ref>(){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d5b/a06620_1a1df59a6c3578a3d5d96bfef4ffd8fbc8" kindref="member">installed_interrupt_manager</ref>=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IDT_Pointer<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="d5/dee/a06710_1ab28e82ae69032cb4ad3ec3a0be3d7129" kindref="member">limit</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="d5/dee/a06710_1ad516e6ff5b7dd7f6ce2946c527ddb8b9" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="dd/d8c/a06720_1a21c3ca5c318038eaed596c14fd2666ed" kindref="member">__attribute__</ref>((packed));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>IDT_Pointer<sp/>idt_ptr;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>idt_ptr.limit<sp/>=<sp/>this-&gt;<ref refid="d5/dee/a06710_1ab28e82ae69032cb4ad3ec3a0be3d7129" kindref="member">limit</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>idt_ptr.base<sp/>=<sp/>this-&gt;<ref refid="d5/dee/a06710_1ad516e6ff5b7dd7f6ce2946c527ddb8b9" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;lidt<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">(idt_ptr));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;IDT<sp/>Installed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="da/d2a/a07636_1a1ab5b6378071338ede295f0bffaf3d51" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d2a/a07636_1a1ab5b6378071338ede295f0bffaf3d51" kindref="member">hardware_communication::InterruptManager::activate</ref>(){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;sti&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;Interrupts<sp/>Activated\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112" refid="da/d2a/a07636_1a9451566bf08617378ca2144505d394a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d2a/a07636_1a9451566bf08617378ca2144505d394a6" kindref="member">hardware_communication::InterruptManager::deactivate</ref>(){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;cli&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;Interrupts<sp/>Deactivated\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="da/d2a/a07636_1aac20f3a896bea512413568a60ad48c3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d2a/a07636_1aac20f3a896bea512413568a60ad48c3d" kindref="member">hardware_communication::InterruptManager::printLoadedTable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IDT_Pointer<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="d5/dee/a06710_1ab28e82ae69032cb4ad3ec3a0be3d7129" kindref="member">limit</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="d5/dee/a06710_1ad516e6ff5b7dd7f6ce2946c527ddb8b9" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="dd/d8c/a06720_1a21c3ca5c318038eaed596c14fd2666ed" kindref="member">__attribute__</ref>((packed));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>IDT_Pointer<sp/>idt_ptr;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;sidt<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=m&quot;</highlight><highlight class="normal">(idt_ptr));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;---\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;INFO<sp/>about<sp/>:<sp/>Currently<sp/>Loaded<sp/>IDT\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;Base<sp/>Address:<sp/>%#x\n&quot;</highlight><highlight class="normal">,<sp/>idt_ptr.base);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;Limit:<sp/>%#x<sp/>(%d<sp/>bytes)\n&quot;</highlight><highlight class="normal">,<sp/>idt_ptr.limit,<sp/>idt_ptr.limit);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;Entries:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(idt_ptr.limit<sp/>+<sp/>1)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="db/d82/a07632" kindref="compound">hardware_communication::IDT_row</ref>));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;---\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>Idx<sp/>|<sp/>Handler<sp/>Address<sp/>|<sp/>Selector<sp/>|<sp/>Access<sp/>Flags\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d82/a07632" kindref="compound">hardware_communication::IDT_row</ref>*<sp/>current_idt<sp/>=<sp/>(<ref refid="db/d82/a07632" kindref="compound">hardware_communication::IDT_row</ref>*)idt_ptr.base;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>num_entries<sp/>=<sp/>(idt_ptr.limit<sp/>+<sp/>1)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="db/d82/a07632" kindref="compound">hardware_communication::IDT_row</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_entries;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>handler_address<sp/>=<sp/>(current_idt[i].<ref refid="db/d82/a07632_1af1a4bb042f75f10c5e2b08034e82aed3" kindref="member">handlerAddressHighbits</ref><sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>current_idt[i].<ref refid="da/dee/a06692_1adf5df650f7c6f6e7792d97ee2b851265" kindref="member">handlerAddressLowbits</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handler_address<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>%3d<sp/>|<sp/>%#015x<sp/>|<sp/>%#08x<sp/>|<sp/>%#012x\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler_address,<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_idt[i].<ref refid="da/dee/a06692_1acca378f87bf61c0de2befa4244846bfe" kindref="member">kernelCodeSegmentSelector</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_idt[i].<ref refid="d5/dee/a06710_1a8b0d6200bc639dd37ff68847a0adde5f" kindref="member">access</ref></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;---\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="da/d2a/a07636_1ad8a6f694662a3a36ba9353197e20c1b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d2a/a07636_1ad8a6f694662a3a36ba9353197e20c1b1" kindref="member">hardware_communication::InterruptManager::printLoadedTableHeader</ref>(){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IDT_Pointer<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="d5/dee/a06710_1ab28e82ae69032cb4ad3ec3a0be3d7129" kindref="member">limit</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="d5/dee/a06710_1ad516e6ff5b7dd7f6ce2946c527ddb8b9" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="dd/d8c/a06720_1a21c3ca5c318038eaed596c14fd2666ed" kindref="member">__attribute__</ref>((packed));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>IDT_Pointer<sp/>idt_ptr;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;sidt<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=m&quot;</highlight><highlight class="normal">(idt_ptr));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;---\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;INFO<sp/>about<sp/>:<sp/>Currently<sp/>Loaded<sp/>IDT\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;Base<sp/>Address:<sp/>%#x\n&quot;</highlight><highlight class="normal">,<sp/>idt_ptr.base);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;Limit:<sp/>%#x<sp/>(%d<sp/>bytes)\n&quot;</highlight><highlight class="normal">,<sp/>idt_ptr.limit,<sp/>idt_ptr.limit);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;Entries:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(idt_ptr.limit<sp/>+<sp/>1)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="db/d82/a07632" kindref="compound">hardware_communication::IDT_row</ref>));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;---\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="da/d2a/a07636_1a2d3ef1656e1eaaf86be40a200a49a4b2" refkind="member"><highlight class="normal">uintptr_t<sp/><ref refid="da/d2a/a07636_1a2d3ef1656e1eaaf86be40a200a49a4b2" kindref="member">hardware_communication::InterruptManager::handleInterrupt</ref>(uint8_t<sp/>interruptNumber,<sp/>uintptr_t<sp/>esp){</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>global<sp/>pointer<sp/>&quot;installed_interrupt_manager&quot;<sp/>to<sp/>access<sp/>the<sp/>current<sp/>interrupt<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d2/d5b/a06620_1a1df59a6c3578a3d5d96bfef4ffd8fbc8" kindref="member">installed_interrupt_manager</ref>-&gt;<ref refid="da/d2a/a07636_1ac8aba191e612ad605b8b188f78e65d3b" kindref="member">handlers</ref>[interruptNumber]!=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp<sp/>=<sp/><ref refid="d2/d5b/a06620_1a1df59a6c3578a3d5d96bfef4ffd8fbc8" kindref="member">installed_interrupt_manager</ref>-&gt;<ref refid="da/d2a/a07636_1ac8aba191e612ad605b8b188f78e65d3b" kindref="member">handlers</ref>[interruptNumber]-&gt;<ref refid="de/def/a07628_1aa89d41d69840cb4f1c8692fa6ded28f4" kindref="member">handleInterrupt</ref>(esp);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(interruptNumber!=0x20){<sp/></highlight><highlight class="comment">//0x20<sp/>is<sp/>Hardware<sp/>Timer<sp/>Interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d4e/a06717_1a45ee52b918a784ff0e96e7c8917a91d9" kindref="member">basic::printf</ref>(</highlight><highlight class="stringliteral">&quot;UNHANDLED<sp/>INTERRUPT<sp/>%#hx\n&quot;</highlight><highlight class="normal">,interruptNumber);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hardware<sp/>interrupts<sp/>must<sp/>still<sp/>be<sp/>acknowledged<sp/>to<sp/>the<sp/>PIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0x20<sp/>&lt;=interruptNumber<sp/>&amp;&amp;<sp/>interruptNumber<sp/>&lt;=<sp/>0x2F)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>picMasterCommand.write(0x20);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0x28<sp/>&lt;=<sp/>interruptNumber)<sp/>picSlaveCommand.write(0x20);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>esp;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="libk_src/hardware_communication/kinterrupt.cpp"/>
  </compounddef>
</doxygen>
