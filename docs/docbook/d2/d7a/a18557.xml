<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a18557" xml:lang="en-US">
<title>/home/shreekar/Desktop/Building_own_OS/OSOS/kernel_src/kernel.cpp File Reference</title>
<indexterm><primary>/home/shreekar/Desktop/Building_own_OS/OSOS/kernel_src/kernel.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;cstdint&gt;<?linebreak?>#include &quot;basic/multiboot.h&quot;<?linebreak?>#include &quot;essential/kicxxabi.hpp&quot;<?linebreak?>#include &quot;basic/kiostream.hpp&quot;<?linebreak?>#include &quot;basic/kmemory.hpp&quot;<?linebreak?>#include &quot;essential/kgdt.hpp&quot;<?linebreak?>#include &quot;hardware_communication/kinterrupt.hpp&quot;<?linebreak?>#include &quot;driver/kkeyboard.hpp&quot;<?linebreak?>#include &quot;driver/kmouse.hpp&quot;<?linebreak?>#include &quot;driver/kdriver.hpp&quot;<?linebreak?></programlisting>Include dependency graph for kernel.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d6/da9/a18558.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_a19437">KeyboardEventHandler_for_kernel</link></para>

<para>Custom keyboard event handler implementation for the kernel. </para>
</listitem>
            <listitem><para>class <link linkend="_a19441">MouseEventHandler_for_kernel</link></para>

<para>Custom mouse event handler implementation for the kernel. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_a18557_1abb4e4866092116b520310d61961bfe12">kernelMain</link> (multiboot_info_t *mbi, uint32_t magicnumber)</para>

<para>The main entry point for the C++ kernel. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_a18557_1abb4e4866092116b520310d61961bfe12"/><section>
    <title>kernelMain()</title>
<indexterm><primary>kernelMain</primary><secondary>kernel.cpp</secondary></indexterm>
<indexterm><primary>kernel.cpp</primary><secondary>kernelMain</secondary></indexterm>
<para><computeroutput>void kernelMain (multiboot_info_t * mbi, uint32_t magicnumber)</computeroutput></para><para>

<para>The main entry point for the C++ kernel. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mbi</entry><entry>
<para>Pointer to the Multiboot information structure provided by GRUB. </para>
</entry>
                            </row>
                            <row>
<entry>magicnumber</entry><entry>
<para>The magic number passed by GRUB to verify boot. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_a18557_source_1l00105">105</link> of file <link linkend="_a18557_source">kernel.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00106 {
00107 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;int&#32;a=1/0;</emphasis>
00108 &#32;&#32;&#32;&#32;<link linkend="_a18620_1a433c3d2d19d89890b522ac26b05fa7aa">essential::__callConstructors</link>();
00109 &#32;&#32;&#32;&#32;<link linkend="_a18618_1a8ca6648639f335b207c748074dcf9f25">basic::enable_cursor</link>(0,15);&#32;<emphasis role="comment">//&#32;(0,15)&#32;is&#32;for&#32;blinking&#32;block</emphasis>
00110 &#32;&#32;&#32;&#32;<link linkend="_a18618_1a02923caa95013ec5d9333c25d9cca1d6">basic::__clearScreen</link>();
00111 &#32;&#32;&#32;&#32;<emphasis role="comment">//-------------Global&#32;Descriptor&#32;Table&#32;-------------</emphasis>
00112 &#32;&#32;&#32;&#32;<link linkend="_a19521">essential::GDT</link>&#32;osos_GDT;
00113 &#32;&#32;&#32;&#32;osos_GDT.<link linkend="_a19521_1af8e3c1da270077eb7cc6551b35c0e5ca">installTable</link>();
00114 &#32;&#32;&#32;&#32;<emphasis role="comment">//------------Interrupt&#32;Descriptor&#32;Table&#32;and&#32;Drivers&#32;-------------</emphasis>
00115 &#32;&#32;&#32;&#32;<link linkend="_a19537">hardware_communication::InterruptManager</link>&#32;osos_InterruptManager(&amp;osos_GDT);
00116 &#32;&#32;&#32;&#32;osos_InterruptManager.installTable();
00117 &#32;&#32;&#32;&#32;
00118 &#32;&#32;&#32;&#32;<emphasis role="comment">//------------Creating&#32;object&#32;of&#32;drivers&#32;so&#32;that&#32;they&#32;will&#32;handle&#32;their&#32;corresponding&#32;Interrupts------------</emphasis>
00119 &#32;&#32;&#32;&#32;<link linkend="_a19497">driver::DriverManager</link>&#32;driverManager;
00120 
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a19437">KeyboardEventHandler_for_kernel</link>&#32;keyboardEventHandler_for_kernel;
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a19505">driver::KeyboardDriver</link>&#32;keyboard(&amp;osos_InterruptManager,&amp;keyboardEventHandler_for_kernel);
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;driverManager.<link linkend="_a19497_1ab8bd89b91ea49f343276c3c841153cd8">addDriver</link>(&amp;keyboard);
00124 
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a19441">MouseEventHandler_for_kernel</link>&#32;mouseEventHandler_for_kernel;
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a19513">driver::MouseDriver</link>&#32;mouse(&amp;osos_InterruptManager,&#32;&amp;mouseEventHandler_for_kernel);
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;driverManager.<link linkend="_a19497_1ab8bd89b91ea49f343276c3c841153cd8">addDriver</link>(&amp;mouse);
00128 
00129 &#32;&#32;&#32;&#32;driverManager.<link linkend="_a19497_1a05b071d8a8c12f2d284fb61f4ecd116e">activateAll</link>();
00130 
00131 &#32;&#32;&#32;&#32;<link linkend="_a19537_1a1ab5b6378071338ede295f0bffaf3d51">hardware_communication::InterruptManager::activate</link>();
00132 &#32;&#32;&#32;&#32;
00133 &#32;&#32;&#32;&#32;<link linkend="_a19521_1a2ae998750fc1e18e6778e92774bd3574">essential::GDT::printLoadedTableHeader</link>();
00134 &#32;&#32;&#32;&#32;<link linkend="_a19537_1ad8a6f694662a3a36ba9353197e20c1b1">hardware_communication::InterruptManager::printLoadedTableHeader</link>();
00135 &#32;&#32;&#32;&#32;<link linkend="_a18618_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;HELLO&#32;FROM&#32;OSOS&#32;:)\n&quot;</emphasis>);
00136 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>){};
00137 
00138 &#32;&#32;&#32;&#32;<link linkend="_a18618_1a4b31902bf2cff8ff28405aa57d9f4575">basic::disable_cursor</link>();
00139 &#32;&#32;&#32;&#32;<link linkend="_a18620_1a098e7240e26e869c035075be004b4ee9">essential::__cxa_finalize</link>(0);
00140 &#32;&#32;&#32;&#32;(void)mbi;
00141 &#32;&#32;&#32;&#32;(void)magicnumber;
00142 }
</programlisting><para>
References <link linkend="_a18614_source_1l00007">essential::__callConstructors()</link>, <link linkend="_a18593_source_1l00128">basic::__clearScreen()</link>, <link linkend="_a18614_source_1l00049">essential::__cxa_finalize()</link>, <link linkend="_a18599_source_1l00117">hardware_communication::InterruptManager::activate()</link>, <link linkend="_a18602_source_1l00024">driver::DriverManager::activateAll()</link>, <link linkend="_a18602_source_1l00018">driver::DriverManager::addDriver()</link>, <link linkend="_a18593_source_1l00042">basic::disable_cursor()</link>, <link linkend="_a18593_source_1l00020">basic::enable_cursor()</link>, <link linkend="_a18611_source_1l00051">essential::GDT::installTable()</link>, <link linkend="_a18599_source_1l00100">hardware_communication::InterruptManager::installTable()</link>, <link linkend="_a18593_source_1l00306">basic::printf()</link>, <link linkend="_a18611_source_1l00124">essential::GDT::printLoadedTableHeader()</link>, and <link linkend="_a18599_source_1l00163">hardware_communication::InterruptManager::printLoadedTableHeader()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d2/d7a/a18557_abb4e4866092116b520310d61961bfe12_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
