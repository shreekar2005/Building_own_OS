<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a07564" xml:lang="en-US">
<title>hardware_communication::InterruptManager</title>
<indexterm><primary>hardware_communication::InterruptManager</primary></indexterm>
<para>
<computeroutput>#include &quot;kinterrupt.hpp&quot;</computeroutput>
</para>
Collaboration diagram for hardware_communication::InterruptManager:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d4/de0/a07562.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_a07564_1aec70c703cac64ef1eec4b5a94d2e145c">InterruptManager</link> (<link linkend="_a07548">essential::GDT</link> *gdt)</para>
</listitem>
            <listitem><para><link linkend="_a07564_1a65276f26b5d5197482a415b83a898560">~InterruptManager</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_a07564_1a81d593116320da32f1aa4057087f1e11">installTable</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="_a07564_1a1ab5b6378071338ede295f0bffaf3d51">activate</link> ()</para>
</listitem>
            <listitem><para>static void <link linkend="_a07564_1a9451566bf08617378ca2144505d394a6">deactivate</link> ()</para>
</listitem>
            <listitem><para>static uintptr_t <link linkend="_a07564_1a2d3ef1656e1eaaf86be40a200a49a4b2">handleInterrupt</link> (uint8_t interruptNumber, uintptr_t esp)</para>
</listitem>
            <listitem><para>static void <link linkend="_a07564_1aac20f3a896bea512413568a60ad48c3d">printLoadedTable</link> ()</para>
</listitem>
            <listitem><para>static void <link linkend="_a07564_1ad8a6f694662a3a36ba9353197e20c1b1">printLoadedTableHeader</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>uint32_t <link linkend="_a07564_1ad94bd8e9c355fde3e814d4894bab0181">base</link></para>
</listitem>
            <listitem><para>uint16_t <link linkend="_a07564_1a1991d8428ff7c74b31f42d48bb49547a">limit</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_a07564_1af448c0d55d2e226050b7f4efb6d4abe8">setIDTEntry</link> (uint8_t interruptNumber, uint16_t codeSegmentSelectorOffset, void(*handler)(), uint8_t DescriptorPrivilegeLever, uint8_t DescriptorType)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_a07556">InterruptHandler</link> * <link linkend="_a07564_1ac8aba191e612ad605b8b188f78e65d3b">handlers</link> [256]</para>
</listitem>
            <listitem><para><link linkend="_a07560">IDT_row</link> <link linkend="_a07564_1a7b6bb52a8072c51bfcb4f4877c3d0226">interruptDescriptorTable</link> [256]</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_a07576">hardware_communication::Port8BitSlow</link> <link linkend="_a07564_1acb04723d03d6b34abbc5f7407cab0b33">picMasterCommand</link></para>
</listitem>
            <listitem><para>static <link linkend="_a07576">hardware_communication::Port8BitSlow</link> <link linkend="_a07564_1a5287e31a546f60708b085b387332a904">picMasterData</link></para>
</listitem>
            <listitem><para>static <link linkend="_a07576">hardware_communication::Port8BitSlow</link> <link linkend="_a07564_1afed9d24b37c8f9386a71f4284b2502a4">picSlaveCommand</link></para>
</listitem>
            <listitem><para>static <link linkend="_a07576">hardware_communication::Port8BitSlow</link> <link linkend="_a07564_1ac1111b7cfbd27b37f03a0678ae5dbaf1">picSlaveData</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_a06596_source_1l00046">46</link> of file <link linkend="_a06596_source">kinterrupt.hpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_a07564_1aec70c703cac64ef1eec4b5a94d2e145c"/><section>
    <title>InterruptManager()</title>
<indexterm><primary>InterruptManager</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>InterruptManager</secondary></indexterm>
<para><computeroutput>hardware_communication::InterruptManager::InterruptManager (<link linkend="_a07548">essential::GDT</link> * gdt)</computeroutput></para><para>
Definition at line <link linkend="_a06626_source_1l00032">32</link> of file <link linkend="_a06626_source">kinterrupt.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00033 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ICW1:&#32;Start&#32;Initialization&#32;Sequence.&#32;Both&#32;PICs&#32;are&#32;told&#32;to&#32;listen&#32;for&#32;3&#32;more&#32;bytes&#32;of&#32;config&#32;data.</emphasis>
00034 &#32;&#32;&#32;&#32;<link linkend="_a07564_1acb04723d03d6b34abbc5f7407cab0b33">picMasterCommand</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x11);
00035 &#32;&#32;&#32;&#32;<link linkend="_a07564_1afed9d24b37c8f9386a71f4284b2502a4">picSlaveCommand</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x11);
00036 
00037 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ICW2:&#32;Vector&#32;Remapping.</emphasis>
00038 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Master&#32;is&#32;told&#32;to&#32;remap&#32;its&#32;IRQs&#32;(0-7)&#32;to&#32;CPU&#32;vectors&#32;0x20-0x27.</emphasis>
00039 &#32;&#32;&#32;&#32;<link linkend="_a07564_1a5287e31a546f60708b085b387332a904">picMasterData</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x20);
00040 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Slave&#32;is&#32;told&#32;to&#32;remap&#32;its&#32;IRQs&#32;(8-15)&#32;to&#32;CPU&#32;vectors&#32;0x28-0x2F.</emphasis>
00041 &#32;&#32;&#32;&#32;<link linkend="_a07564_1ac1111b7cfbd27b37f03a0678ae5dbaf1">picSlaveData</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x28);
00042 
00043 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ICW3:&#32;Chaining&#32;Configuration.</emphasis>
00044 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Master&#32;is&#32;told&#32;a&#32;slave&#32;is&#32;connected&#32;on&#32;its&#32;IRQ&#32;2&#32;line&#32;(0x04&#32;=&#32;bit&#32;2&#32;set).</emphasis>
00045 &#32;&#32;&#32;&#32;<link linkend="_a07564_1a5287e31a546f60708b085b387332a904">picMasterData</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x04);
00046 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Slave&#32;is&#32;told&#32;its&#32;identity&#32;is&#32;2.</emphasis>
00047 &#32;&#32;&#32;&#32;<link linkend="_a07564_1ac1111b7cfbd27b37f03a0678ae5dbaf1">picSlaveData</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x02);
00048 
00049 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ICW4:&#32;Environment&#32;Information.</emphasis>
00050 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Both&#32;are&#32;told&#32;to&#32;operate&#32;in&#32;standard&#32;&quot;8086/88&quot;&#32;mode.</emphasis>
00051 &#32;&#32;&#32;&#32;<link linkend="_a07564_1a5287e31a546f60708b085b387332a904">picMasterData</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x01);
00052 &#32;&#32;&#32;&#32;<link linkend="_a07564_1ac1111b7cfbd27b37f03a0678ae5dbaf1">picSlaveData</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x01);
00053 
00054 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;OCW1:&#32;Interrupt&#32;Masking.</emphasis>
00055 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;is&#32;the&#32;final&#32;step,&#32;enabling&#32;all&#32;interrupts&#32;by&#32;writing&#32;a&#32;mask&#32;of&#32;all&#32;zeros.</emphasis>
00056 &#32;&#32;&#32;&#32;<link linkend="_a07564_1a5287e31a546f60708b085b387332a904">picMasterData</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x00);
00057 &#32;&#32;&#32;&#32;<link linkend="_a07564_1ac1111b7cfbd27b37f03a0678ae5dbaf1">picSlaveData</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x00);
00058 
00059 &#32;&#32;&#32;&#32;<link linkend="_a07564_1ad94bd8e9c355fde3e814d4894bab0181">base</link>=(uintptr_t)&amp;<link linkend="_a07564_1a7b6bb52a8072c51bfcb4f4877c3d0226">interruptDescriptorTable</link>;
00060 &#32;&#32;&#32;&#32;<link linkend="_a07564_1a1991d8428ff7c74b31f42d48bb49547a">limit</link>&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_a07564_1a7b6bb52a8072c51bfcb4f4877c3d0226">interruptDescriptorTable</link>)&#32;-&#32;1;
00061 
00062 &#32;&#32;&#32;&#32;uint16_t&#32;kernelCSselectorOffset&#32;=&#32;gdt-&gt;<link linkend="_a07548_1a89a8d2c17e3c22e7200bff09252f46e1">kernel_CS_selector</link>();
00063 &#32;&#32;&#32;&#32;uint8_t&#32;IDT_INTERRUPT_GATE=0xE;
00064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;&#32;i&lt;256;&#32;i++){
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a07564_1af448c0d55d2e226050b7f4efb6d4abe8">setIDTEntry</link>(i,&#32;kernelCSselectorOffset,&#32;&amp;<link linkend="_a06596_1a07e074bde074261858311b014bc2b398">ignoreInterrupt</link>,&#32;0,&#32;IDT_INTERRUPT_GATE);
00066 &#32;&#32;&#32;&#32;}
00067 
00068 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;handlers&#32;for&#32;hardware&#32;interrupts</emphasis>
00069 &#32;&#32;&#32;&#32;<link linkend="_a07564_1af448c0d55d2e226050b7f4efb6d4abe8">setIDTEntry</link>(0x20,&#32;kernelCSselectorOffset,&#32;&amp;<link linkend="_a06596_1adf60fad10b12cc19ad193c928d36445c">handleIRQ0x00</link>,&#32;0,&#32;IDT_INTERRUPT_GATE);&#32;<emphasis role="comment">//&#32;Timer</emphasis>
00070 &#32;&#32;&#32;&#32;<link linkend="_a07564_1af448c0d55d2e226050b7f4efb6d4abe8">setIDTEntry</link>(0x21,&#32;kernelCSselectorOffset,&#32;&amp;<link linkend="_a06596_1a6498ed740318b424aaae4db1f223e558">handleIRQ0x01</link>,&#32;0,&#32;IDT_INTERRUPT_GATE);&#32;<emphasis role="comment">//&#32;Keyboard</emphasis>
00071 &#32;&#32;&#32;&#32;<link linkend="_a07564_1af448c0d55d2e226050b7f4efb6d4abe8">setIDTEntry</link>(0x2C,&#32;kernelCSselectorOffset,&#32;&amp;<link linkend="_a06596_1a996c60cc7e88bb1c85505c19f6c35117">handleIRQ0x0C</link>,&#32;0,&#32;IDT_INTERRUPT_GATE);&#32;<emphasis role="comment">//&#32;PS/2&#32;Mouse</emphasis>
00072 }
</programlisting><para>
References <link linkend="_a06614_source_1l00002">base</link>, <link linkend="_a06596_1adf60fad10b12cc19ad193c928d36445c">handleIRQ0x00()</link>, <link linkend="_a06596_1a6498ed740318b424aaae4db1f223e558">handleIRQ0x01()</link>, <link linkend="_a06596_1a996c60cc7e88bb1c85505c19f6c35117">handleIRQ0x0C()</link>, <link linkend="_a06596_1a07e074bde074261858311b014bc2b398">ignoreInterrupt()</link>, <link linkend="_a06638_source_1l00140">essential::GDT::kernel_CS_selector()</link>, and <link linkend="_a06614_source_1l00001">limit</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d8/d57/a07564_aec70c703cac64ef1eec4b5a94d2e145c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_a07564_1a65276f26b5d5197482a415b83a898560"/><section>
    <title>~InterruptManager()</title>
<indexterm><primary>~InterruptManager</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>~InterruptManager</secondary></indexterm>
<para><computeroutput>hardware_communication::InterruptManager::~InterruptManager ( )</computeroutput></para><para>
Definition at line <link linkend="_a06626_source_1l00074">74</link> of file <link linkend="_a06626_source">kinterrupt.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00074 {}
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_a07564_1a1ab5b6378071338ede295f0bffaf3d51"/><section>
    <title>activate()</title>
<indexterm><primary>activate</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>activate</secondary></indexterm>
<para><computeroutput>void hardware_communication::InterruptManager::activate ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06626_source_1l00108">108</link> of file <link linkend="_a06626_source">kinterrupt.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00109 &#32;&#32;&#32;&#32;__asm__&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;sti&quot;</emphasis>);
00110 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;Interrupts&#32;Activated\n&quot;</emphasis>);
00111 }
</programlisting><para>
References <link linkend="_a06620_source_1l00276">basic::printf()</link>.</para>
<para>
Referenced by <link linkend="_a06584_source_1l00085">kernelMain()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d8/d57/a07564_a1ab5b6378071338ede295f0bffaf3d51_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d8/d57/a07564_a1ab5b6378071338ede295f0bffaf3d51_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_a07564_1a9451566bf08617378ca2144505d394a6"/><section>
    <title>deactivate()</title>
<indexterm><primary>deactivate</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>deactivate</secondary></indexterm>
<para><computeroutput>void hardware_communication::InterruptManager::deactivate ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06626_source_1l00112">112</link> of file <link linkend="_a06626_source">kinterrupt.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00113 &#32;&#32;&#32;&#32;__asm__&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;cli&quot;</emphasis>);
00114 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;Interrupts&#32;Deactivated\n&quot;</emphasis>);
00115 }
</programlisting><para>
References <link linkend="_a06620_source_1l00276">basic::printf()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d8/d57/a07564_a9451566bf08617378ca2144505d394a6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_a07564_1a2d3ef1656e1eaaf86be40a200a49a4b2"/><section>
    <title>handleInterrupt()</title>
<indexterm><primary>handleInterrupt</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>handleInterrupt</secondary></indexterm>
<para><computeroutput>uintptr_t hardware_communication::InterruptManager::handleInterrupt (uint8_t interruptNumber, uintptr_t esp)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06626_source_1l00169">169</link> of file <link linkend="_a06626_source">kinterrupt.cpp</link>.</para>
<programlisting linenumbering="unnumbered{
00170 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;the&#32;global&#32;pointer&#32;&quot;installed_interrupt_manager&quot;&#32;to&#32;access&#32;the&#32;current&#32;interrupt&#32;manager</emphasis>
00171 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_a06626_1a1df59a6c3578a3d5d96bfef4ffd8fbc8">installed_interrupt_manager</link>-&gt;<link linkend="_a07564_1ac8aba191e612ad605b8b188f78e65d3b">handlers</link>[interruptNumber]!=<emphasis role="keyword">nullptr</emphasis>){
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;esp&#32;=&#32;<link linkend="_a06626_1a1df59a6c3578a3d5d96bfef4ffd8fbc8">installed_interrupt_manager</link>-&gt;<link linkend="_a07564_1ac8aba191e612ad605b8b188f78e65d3b">handlers</link>[interruptNumber]-&gt;<link linkend="_a07556_1aa89d41d69840cb4f1c8692fa6ded28f4">handleInterrupt</link>(esp);
00173 &#32;&#32;&#32;&#32;}
00174 
00175 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(interruptNumber!=0x20){&#32;<emphasis role="comment">//0x20&#32;is&#32;Hardware&#32;Timer&#32;Interrupt</emphasis>
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;UNHANDLED&#32;INTERRUPT&#32;%#hx\n&quot;</emphasis>,interruptNumber);
00177 &#32;&#32;&#32;&#32;}
00178 
00179 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Hardware&#32;interrupts&#32;must&#32;still&#32;be&#32;acknowledged&#32;to&#32;the&#32;PIC</emphasis>
00180 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0x20&#32;&lt;=interruptNumber&#32;&amp;&amp;&#32;interruptNumber&#32;&lt;=&#32;0x2F)&#32;{
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a07564_1acb04723d03d6b34abbc5f7407cab0b33">picMasterCommand</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x20);
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0x28&#32;&lt;=&#32;interruptNumber)&#32;<link linkend="_a07564_1afed9d24b37c8f9386a71f4284b2502a4">picSlaveCommand</link>.<link linkend="_a07576_1af84b15d5a205a421a9877e2341714031">write</link>(0x20);
00183 &#32;&#32;&#32;&#32;}
00184 &#32;&#32;&#32;&#32;
00185 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;esp;
00186 }
</programlisting><para>
References <link linkend="_a07556_1aa89d41d69840cb4f1c8692fa6ded28f4">hardware_communication::InterruptHandler::handleInterrupt()</link>, <link linkend="_a06596_source_1l00056">handlers</link>, <link linkend="_a06626_source_1l00090">installed_interrupt_manager</link>, and <link linkend="_a06620_source_1l00276">basic::printf()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d8/d57/a07564_a2d3ef1656e1eaaf86be40a200a49a4b2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_a07564_1a81d593116320da32f1aa4057087f1e11"/><section>
    <title>installTable()</title>
<indexterm><primary>installTable</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>installTable</secondary></indexterm>
<para><computeroutput>void hardware_communication::InterruptManager::installTable ( )</computeroutput></para><para>
Definition at line <link linkend="_a06626_source_1l00091">91</link> of file <link linkend="_a06626_source">kinterrupt.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00092 &#32;&#32;&#32;&#32;<link linkend="_a06626_1a1df59a6c3578a3d5d96bfef4ffd8fbc8">installed_interrupt_manager</link>=<emphasis role="keyword">this</emphasis>;
00093 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>IDT_Pointer&#32;{
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint16_t&#32;<link linkend="_a06614_1ab28e82ae69032cb4ad3ec3a0be3d7129">limit</link>;
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_a06614_1ad516e6ff5b7dd7f6ce2946c527ddb8b9">base</link>;
00096 &#32;&#32;&#32;&#32;}&#32;<link linkend="_a06648_1a21c3ca5c318038eaed596c14fd2666ed">__attribute__</link>((packed));
00097 
00098 &#32;&#32;&#32;&#32;IDT_Pointer&#32;idt_ptr;
00099 &#32;&#32;&#32;&#32;idt_ptr.limit&#32;=&#32;this-&gt;<link linkend="_a07564_1a1991d8428ff7c74b31f42d48bb49547a">limit</link>;
00100 &#32;&#32;&#32;&#32;idt_ptr.base&#32;=&#32;this-&gt;<link linkend="_a07564_1ad94bd8e9c355fde3e814d4894bab0181">base</link>;
00101 
00102 &#32;&#32;&#32;&#32;__asm__&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;lidt&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;m&quot;</emphasis>(idt_ptr));
00103 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;IDT&#32;Installed\n&quot;</emphasis>);
00104 }
</programlisting><para>
References <link linkend="_a06648_1a21c3ca5c318038eaed596c14fd2666ed">hardware_communication::__attribute__</link>, <link linkend="_a06614_source_1l00002">base</link>, <link linkend="_a06626_source_1l00090">installed_interrupt_manager</link>, <link linkend="_a06614_source_1l00001">limit</link>, and <link linkend="_a06620_source_1l00276">basic::printf()</link>.</para>
<para>
Referenced by <link linkend="_a06584_source_1l00085">kernelMain()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d8/d57/a07564_a81d593116320da32f1aa4057087f1e11_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d8/d57/a07564_a81d593116320da32f1aa4057087f1e11_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_a07564_1aac20f3a896bea512413568a60ad48c3d"/><section>
    <title>printLoadedTable()</title>
<indexterm><primary>printLoadedTable</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>printLoadedTable</secondary></indexterm>
<para><computeroutput>void hardware_communication::InterruptManager::printLoadedTable ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06626_source_1l00117">117</link> of file <link linkend="_a06626_source">kinterrupt.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00118 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>IDT_Pointer&#32;{
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint16_t&#32;<link linkend="_a06614_1ab28e82ae69032cb4ad3ec3a0be3d7129">limit</link>;
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_a06614_1ad516e6ff5b7dd7f6ce2946c527ddb8b9">base</link>;
00121 &#32;&#32;&#32;&#32;}&#32;<link linkend="_a06648_1a21c3ca5c318038eaed596c14fd2666ed">__attribute__</link>((packed));
00122 
00123 &#32;&#32;&#32;&#32;IDT_Pointer&#32;idt_ptr;
00124 &#32;&#32;&#32;&#32;__asm__&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;sidt&#32;%0&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=m&quot;</emphasis>(idt_ptr));
00125 
00126 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;---\n&quot;</emphasis>);
00127 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;INFO&#32;about&#32;:&#32;Currently&#32;Loaded&#32;IDT\n&quot;</emphasis>);
00128 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;Base&#32;Address:&#32;%#x\n&quot;</emphasis>,&#32;idt_ptr.base);
00129 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;Limit:&#32;%#x&#32;(%d&#32;bytes)\n&quot;</emphasis>,&#32;idt_ptr.limit,&#32;idt_ptr.limit);
00130 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;Entries:&#32;%d\n&quot;</emphasis>,&#32;(idt_ptr.limit&#32;+&#32;1)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_a07560">hardware_communication::IDT_row</link>));
00131 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;---\n&quot;</emphasis>);
00132 
00133 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;&#32;Idx&#32;|&#32;Handler&#32;Address&#32;|&#32;Selector&#32;|&#32;Access&#32;Flags\n&quot;</emphasis>);
00134 &#32;&#32;&#32;&#32;<link linkend="_a07560">hardware_communication::IDT_row</link>*&#32;current_idt&#32;=&#32;(<link linkend="_a07560">hardware_communication::IDT_row</link>*)idt_ptr.base;
00135 &#32;&#32;&#32;&#32;uint32_t&#32;num_entries&#32;=&#32;(idt_ptr.limit&#32;+&#32;1)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_a07560">hardware_communication::IDT_row</link>);
00136 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint32_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;num_entries;&#32;i++)&#32;{
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;handler_address&#32;=&#32;(current_idt[i].handlerAddressHighbits&#32;&lt;&lt;&#32;16)&#32;|&#32;current_idt[i].<link linkend="_a06596_1adf5df650f7c6f6e7792d97ee2b851265">handlerAddressLowbits</link>;
00138 
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(handler_address&#32;!=&#32;0)&#32;{
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;&#32;%3d&#32;|&#32;%#015x&#32;|&#32;%#08x&#32;|&#32;%#012x\n&quot;</emphasis>,&#32;
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i,&#32;
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handler_address,&#32;
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current_idt[i].<link linkend="_a06596_1acca378f87bf61c0de2befa4244846bfe">kernelCodeSegmentSelector</link>,
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current_idt[i].<link linkend="_a06614_1a8b0d6200bc639dd37ff68847a0adde5f">access</link>
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00147 &#32;&#32;&#32;&#32;}
00148 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;---\n&quot;</emphasis>);
00149 }
</programlisting><para>
References <link linkend="_a06648_1a21c3ca5c318038eaed596c14fd2666ed">hardware_communication::__attribute__</link>, <link linkend="_a06614_source_1l00004">access</link>, <link linkend="_a06614_source_1l00002">base</link>, <link linkend="_a06596_source_1l00039">hardware_communication::IDT_row::handlerAddressHighbits</link>, <link linkend="_a06596_source_1l00001">handlerAddressLowbits</link>, <link linkend="_a06596_source_1l00002">kernelCodeSegmentSelector</link>, <link linkend="_a06614_source_1l00001">limit</link>, and <link linkend="_a06620_source_1l00276">basic::printf()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d8/d57/a07564_aac20f3a896bea512413568a60ad48c3d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_a07564_1ad8a6f694662a3a36ba9353197e20c1b1"/><section>
    <title>printLoadedTableHeader()</title>
<indexterm><primary>printLoadedTableHeader</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>printLoadedTableHeader</secondary></indexterm>
<para><computeroutput>void hardware_communication::InterruptManager::printLoadedTableHeader ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06626_source_1l00151">151</link> of file <link linkend="_a06626_source">kinterrupt.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00152 
00153 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>IDT_Pointer&#32;{
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint16_t&#32;<link linkend="_a06614_1ab28e82ae69032cb4ad3ec3a0be3d7129">limit</link>;
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_a06614_1ad516e6ff5b7dd7f6ce2946c527ddb8b9">base</link>;
00156 &#32;&#32;&#32;&#32;}&#32;<link linkend="_a06648_1a21c3ca5c318038eaed596c14fd2666ed">__attribute__</link>((packed));
00157 
00158 &#32;&#32;&#32;&#32;IDT_Pointer&#32;idt_ptr;
00159 &#32;&#32;&#32;&#32;__asm__&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;sidt&#32;%0&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=m&quot;</emphasis>(idt_ptr));
00160 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;---\n&quot;</emphasis>);
00161 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;INFO&#32;about&#32;:&#32;Currently&#32;Loaded&#32;IDT\n&quot;</emphasis>);
00162 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;Base&#32;Address:&#32;%#x\n&quot;</emphasis>,&#32;idt_ptr.base);
00163 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;Limit:&#32;%#x&#32;(%d&#32;bytes)\n&quot;</emphasis>,&#32;idt_ptr.limit,&#32;idt_ptr.limit);
00164 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;Entries:&#32;%d\n&quot;</emphasis>,&#32;(idt_ptr.limit&#32;+&#32;1)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_a07560">hardware_communication::IDT_row</link>));
00165 &#32;&#32;&#32;&#32;<link linkend="_a06645_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;---\n&quot;</emphasis>);
00166 }
</programlisting><para>
References <link linkend="_a06648_1a21c3ca5c318038eaed596c14fd2666ed">hardware_communication::__attribute__</link>, <link linkend="_a06614_source_1l00002">base</link>, <link linkend="_a06614_source_1l00001">limit</link>, and <link linkend="_a06620_source_1l00276">basic::printf()</link>.</para>
<para>
Referenced by <link linkend="_a06584_source_1l00085">kernelMain()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d8/d57/a07564_ad8a6f694662a3a36ba9353197e20c1b1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d8/d57/a07564_ad8a6f694662a3a36ba9353197e20c1b1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_a07564_1af448c0d55d2e226050b7f4efb6d4abe8"/><section>
    <title>setIDTEntry()</title>
<indexterm><primary>setIDTEntry</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>setIDTEntry</secondary></indexterm>
<para><computeroutput>void hardware_communication::InterruptManager::setIDTEntry (uint8_t interruptNumber, uint16_t codeSegmentSelectorOffset, void(*)() handler, uint8_t DescriptorPrivilegeLever, uint8_t DescriptorType)<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06626_source_1l00076">76</link> of file <link linkend="_a06626_source">kinterrupt.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;IDT_DESC_PRESET=&#32;0x80;
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a07564_1a7b6bb52a8072c51bfcb4f4877c3d0226">interruptDescriptorTable</link>[interruptNumber].<link linkend="_a07560_1a3390e4d53e904d420187ecc0247e9289">handlerAddressLowbits</link>=(uint32_t)handler&#32;&amp;&#32;0xFFFF;
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a07564_1a7b6bb52a8072c51bfcb4f4877c3d0226">interruptDescriptorTable</link>[interruptNumber].<link linkend="_a07560_1af1a4bb042f75f10c5e2b08034e82aed3">handlerAddressHighbits</link>=((uint32_t)handler&#32;&gt;&gt;&#32;16)&#32;&amp;&#32;0xFFFF;
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a07564_1a7b6bb52a8072c51bfcb4f4877c3d0226">interruptDescriptorTable</link>[interruptNumber].<link linkend="_a07560_1a96bce1ce9c6a7e9b5a20607f41a2e876">reserved</link>=0;
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a07564_1a7b6bb52a8072c51bfcb4f4877c3d0226">interruptDescriptorTable</link>[interruptNumber].<link linkend="_a07560_1afa706321cb5ba41a6035dbe1ec39c265">access</link>=IDT_DESC_PRESET&#32;|&#32;DescriptorType&#32;|&#32;((DescriptorPrivilegeLever&#32;&amp;&#32;3)&#32;&lt;&lt;&#32;5);
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a07564_1a7b6bb52a8072c51bfcb4f4877c3d0226">interruptDescriptorTable</link>[interruptNumber].<link linkend="_a07560_1a800309c99800063315cddf536a3d0d67">kernelCodeSegmentSelector</link>=codeSegmentSelectorOffset;
00088 }
</programlisting></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_a07564_1ad94bd8e9c355fde3e814d4894bab0181"/><section>
    <title>base</title>
<indexterm><primary>base</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>base</secondary></indexterm>
<para><computeroutput>uint32_t hardware_communication::InterruptManager::base</computeroutput></para><para>
Definition at line <link linkend="_a06596_source_1l00052">52</link> of file <link linkend="_a06596_source">kinterrupt.hpp</link>.</para>
</section>
<anchor xml:id="_a07564_1ac8aba191e612ad605b8b188f78e65d3b"/><section>
    <title>handlers</title>
<indexterm><primary>handlers</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>handlers</secondary></indexterm>
<para><computeroutput><link linkend="_a07556">InterruptHandler</link>* hardware_communication::InterruptManager::handlers[256]<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06596_source_1l00056">56</link> of file <link linkend="_a06596_source">kinterrupt.hpp</link>.</para>
<para>
Referenced by <link linkend="_a06626_source_1l00011">hardware_communication::InterruptHandler::InterruptHandler()</link>, and <link linkend="_a06626_source_1l00169">handleInterrupt()</link>.</para>
</section>
<anchor xml:id="_a07564_1a7b6bb52a8072c51bfcb4f4877c3d0226"/><section>
    <title>interruptDescriptorTable</title>
<indexterm><primary>interruptDescriptorTable</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>interruptDescriptorTable</secondary></indexterm>
<para><computeroutput><link linkend="_a07560">IDT_row</link> hardware_communication::InterruptManager::interruptDescriptorTable[256]<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06596_source_1l00054">54</link> of file <link linkend="_a06596_source">kinterrupt.hpp</link>.</para>
</section>
<anchor xml:id="_a07564_1a1991d8428ff7c74b31f42d48bb49547a"/><section>
    <title>limit</title>
<indexterm><primary>limit</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>limit</secondary></indexterm>
<para><computeroutput>uint16_t hardware_communication::InterruptManager::limit</computeroutput></para><para>
Definition at line <link linkend="_a06596_source_1l00051">51</link> of file <link linkend="_a06596_source">kinterrupt.hpp</link>.</para>
</section>
<anchor xml:id="_a07564_1acb04723d03d6b34abbc5f7407cab0b33"/><section>
    <title>picMasterCommand</title>
<indexterm><primary>picMasterCommand</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>picMasterCommand</secondary></indexterm>
<para><computeroutput><link linkend="_a07576">hardware_communication::Port8BitSlow</link> hardware_communication::InterruptManager::picMasterCommand<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06596_source_1l00064">64</link> of file <link linkend="_a06596_source">kinterrupt.hpp</link>.</para>
</section>
<anchor xml:id="_a07564_1a5287e31a546f60708b085b387332a904"/><section>
    <title>picMasterData</title>
<indexterm><primary>picMasterData</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>picMasterData</secondary></indexterm>
<para><computeroutput><link linkend="_a07576">hardware_communication::Port8BitSlow</link> hardware_communication::InterruptManager::picMasterData<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06596_source_1l00065">65</link> of file <link linkend="_a06596_source">kinterrupt.hpp</link>.</para>
</section>
<anchor xml:id="_a07564_1afed9d24b37c8f9386a71f4284b2502a4"/><section>
    <title>picSlaveCommand</title>
<indexterm><primary>picSlaveCommand</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>picSlaveCommand</secondary></indexterm>
<para><computeroutput><link linkend="_a07576">hardware_communication::Port8BitSlow</link> hardware_communication::InterruptManager::picSlaveCommand<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06596_source_1l00066">66</link> of file <link linkend="_a06596_source">kinterrupt.hpp</link>.</para>
</section>
<anchor xml:id="_a07564_1ac1111b7cfbd27b37f03a0678ae5dbaf1"/><section>
    <title>picSlaveData</title>
<indexterm><primary>picSlaveData</primary><secondary>hardware_communication::InterruptManager</secondary></indexterm>
<indexterm><primary>hardware_communication::InterruptManager</primary><secondary>picSlaveData</secondary></indexterm>
<para><computeroutput><link linkend="_a07576">hardware_communication::Port8BitSlow</link> hardware_communication::InterruptManager::picSlaveData<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a06596_source_1l00067">67</link> of file <link linkend="_a06596_source">kinterrupt.hpp</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
/home/shreekar/Desktop/Building_own_OS/OSOS/libk_header/hardware_communication/<link linkend="_a06596">kinterrupt.hpp</link>/home/shreekar/Desktop/Building_own_OS/OSOS/libk_src/hardware_communication/<link linkend="_a06626">kinterrupt.cpp</link></section>
</section>
