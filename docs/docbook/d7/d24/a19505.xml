<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a19505" xml:lang="en-US">
<title>driver::KeyboardDriver</title>
<indexterm><primary>driver::KeyboardDriver</primary></indexterm>
<para>

<para><link linkend="_a19493">Driver</link> for the PS/2 keyboard, handling scancodes and managing keyboard state (Shift, Caps Lock). @inherits <link linkend="_a19529">hardware_communication::InterruptHandler</link> @inherits <link linkend="_a19493">driver::Driver</link>. </para>
 
</para>
<para>
<computeroutput>#include &quot;kkeyboard.hpp&quot;</computeroutput>
</para>
Inheritance diagram for driver::KeyboardDriver:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d7/d23/a19504.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for driver::KeyboardDriver:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d9/d8c/a19503.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_a19505_1a63898e993f02352193db996d00179347">KeyboardDriver</link> (<link linkend="_a19537">hardware_communication::InterruptManager</link> *<link linkend="_a19529_1ae86f4eae0ce9272b2027d44bdfd71e33">interrupt_manager</link>, <link linkend="_a19501">KeyboardEventHandler</link> *<link linkend="_a19505_1a11ec84b7abf113ec270f124564776e1f">keyboardEventHandler</link>)</para>

<para>Constructs a new <link linkend="_a19505">KeyboardDriver</link> object. </para>
</listitem>
            <listitem><para><link linkend="_a19505_1a77da196f3c04c549e1085ce5566e5df3">~KeyboardDriver</link> ()</para>

<para>Destroys the <link linkend="_a19505">KeyboardDriver</link> object. </para>
</listitem>
            <listitem><para>void <link linkend="_a19505_1a58553d39d7dcfe6b55e8ddb1e7b1d187">activate</link> () override</para>

<para>Activates the keyboard driver. </para>
</listitem>
            <listitem><para>void <link linkend="_a19505_1aaa7e99b6214dc8439230a95dd57e617e">deactivate</link> () override</para>

<para>Deactivates the keyboard driver. (Stub) </para>
</listitem>
            <listitem><para>uint32_t <link linkend="_a19505_1a248fa0da9acac54a3a8880c7b66b3f2b">handleInterrupt</link> (uint32_t esp) override</para>

<para>Handles the keyboard interrupt (IRQ 1). </para>
</listitem>
            <listitem><para>virtual uintptr_t <link linkend="_a19529_1aa89d41d69840cb4f1c8692fa6ded28f4">handleInterrupt</link> (uintptr_t esp)=0</para>
</listitem>
            <listitem><para>int <link linkend="_a19505_1a22b7b080ab1c8b0f2ed4beba75b34691">reset</link> () override</para>

<para>Resets the keyboard. (Stub) </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_a18569_1a6c5563315b1a2f5c67ae8b78d06e3c7f">InterruptManager</link> * <link linkend="_a19529_1ae86f4eae0ce9272b2027d44bdfd71e33">interrupt_manager</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_a19529_1afeede822d3e98957e76e627a54ec2f7a">interruptNumber</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_a19505_1a8a63dbc25a08a75f62ae0674df1deb30">caps_on</link></para>
</listitem>
            <listitem><para><link linkend="_a19545">hardware_communication::Port8Bit</link> <link linkend="_a19505_1a58fc9113701ffc04637996780c843ff0">commandPort</link></para>
</listitem>
            <listitem><para><link linkend="_a19545">hardware_communication::Port8Bit</link> <link linkend="_a19505_1afd6cdddb62a2a2d2b31043eb32887b41">dataPort</link></para>
</listitem>
            <listitem><para><link linkend="_a19501">KeyboardEventHandler</link> * <link linkend="_a19505_1a11ec84b7abf113ec270f124564776e1f">keyboardEventHandler</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_a19505_1aed7b5d279f6f1dffee10d5fb92ed6b1c">led_byte_to_send</link></para>
</listitem>
            <listitem><para>bool <link linkend="_a19505_1afba07c783deebfb275c1437f7c23601d">shift_pressed</link></para>
</listitem>
            <listitem><para>bool <link linkend="_a19505_1a703464394033a8f4f664d9289ae2e9f8">waiting_for_led_ack</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><link linkend="_a19493">Driver</link> for the PS/2 keyboard, handling scancodes and managing keyboard state (Shift, Caps Lock). @inherits <link linkend="_a19529">hardware_communication::InterruptHandler</link> @inherits <link linkend="_a19493">driver::Driver</link>. </para>
<para>
Definition at line <link linkend="_a18575_source_1l00020">20</link> of file <link linkend="_a18575_source">kkeyboard.hpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_a19505_1a63898e993f02352193db996d00179347"/><section>
    <title>KeyboardDriver()</title>
<indexterm><primary>KeyboardDriver</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>KeyboardDriver</secondary></indexterm>
<para><computeroutput>driver::KeyboardDriver::KeyboardDriver (<link linkend="_a19537">hardware_communication::InterruptManager</link> * interrupt_manager, <link linkend="_a19501">driver::KeyboardEventHandler</link> * keyboardEventHandler)</computeroutput></para><para>

<para>Constructs a new <link linkend="_a19505">KeyboardDriver</link> object. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>interrupt_manager</entry><entry>
<para>Pointer to the interrupt manager. </para>
</entry>
                            </row>
                            <row>
<entry>keyboardEventHandler</entry><entry>
<para>Pointer to the event handler that will process key events. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_a18605_source_1l00018">18</link> of file <link linkend="_a18605_source">kkeyboard.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00019 :&#32;<link linkend="_a19529">hardware_communication::InterruptHandler</link>(0x21,&#32;<link linkend="_a19529_1ae86f4eae0ce9272b2027d44bdfd71e33">interrupt_manager</link>),&#32;
00020 &#32;&#32;<link linkend="_a19505_1afd6cdddb62a2a2d2b31043eb32887b41">dataPort</link>(0x60),&#32;
00021 &#32;&#32;<link linkend="_a19505_1a58fc9113701ffc04637996780c843ff0">commandPort</link>(0x64),
00022 &#32;&#32;<link linkend="_a19505_1afba07c783deebfb275c1437f7c23601d">shift_pressed</link>(<emphasis role="keyword">false</emphasis>),
00023 &#32;&#32;<link linkend="_a19505_1a8a63dbc25a08a75f62ae0674df1deb30">caps_on</link>(<emphasis role="keyword">false</emphasis>),
00024 &#32;&#32;<link linkend="_a19505_1a703464394033a8f4f664d9289ae2e9f8">waiting_for_led_ack</link>(<emphasis role="keyword">false</emphasis>){
00025 &#32;&#32;&#32;&#32;this-&gt;keyboardEventHandler=<link linkend="_a19505_1a11ec84b7abf113ec270f124564776e1f">keyboardEventHandler</link>;
00026 &#32;&#32;}
</programlisting><para>
References <link linkend="_a18575_source_1l00030">keyboardEventHandler</link>.</para>
</section>
<anchor xml:id="_a19505_1a77da196f3c04c549e1085ce5566e5df3"/><section>
    <title>~KeyboardDriver()</title>
<indexterm><primary>~KeyboardDriver</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>~KeyboardDriver</secondary></indexterm>
<para><computeroutput>driver::KeyboardDriver::~KeyboardDriver ( )</computeroutput></para><para>

<para>Destroys the <link linkend="_a19505">KeyboardDriver</link> object. </para>
</para>
<para>
Definition at line <link linkend="_a18605_source_1l00029">29</link> of file <link linkend="_a18605_source">kkeyboard.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00029 {}
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_a19505_1a58553d39d7dcfe6b55e8ddb1e7b1d187"/><section>
    <title>activate()</title>
<indexterm><primary>activate</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>activate</secondary></indexterm>
<para><computeroutput>void driver::KeyboardDriver::activate ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Activates the keyboard driver. </para>
</para>
<para>
Implements <link linkend="_a19493_1a8c86c1e52652d8b491d37a3b60b535b0">driver::Driver</link>.</para>
<para>
Definition at line <link linkend="_a18605_source_1l00177">177</link> of file <link linkend="_a18605_source">kkeyboard.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00178 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<link linkend="_a19505_1a58fc9113701ffc04637996780c843ff0">commandPort</link>.<link linkend="_a19545_1ae8688251b574c3fd335b99f7e93fff2d">read</link>()&#32;&amp;&#32;1)&#32;<link linkend="_a19505_1afd6cdddb62a2a2d2b31043eb32887b41">dataPort</link>.<link linkend="_a19545_1ae8688251b574c3fd335b99f7e93fff2d">read</link>();
00179 &#32;&#32;&#32;&#32;<link linkend="_a19505_1a58fc9113701ffc04637996780c843ff0">commandPort</link>.<link linkend="_a19545_1a523b6a757b27418dc015ed13e74bef60">write</link>(0xAE);&#32;<emphasis role="comment">//&#32;activate&#32;communication&#32;for&#32;keyboard</emphasis>
00180 &#32;&#32;&#32;&#32;<link linkend="_a19505_1a58fc9113701ffc04637996780c843ff0">commandPort</link>.<link linkend="_a19545_1a523b6a757b27418dc015ed13e74bef60">write</link>(0x20);&#32;<emphasis role="comment">//&#32;get&#32;current&#32;state</emphasis>
00181 &#32;&#32;&#32;&#32;uint8_t&#32;status&#32;=&#32;(<link linkend="_a19505_1afd6cdddb62a2a2d2b31043eb32887b41">dataPort</link>.<link linkend="_a19545_1ae8688251b574c3fd335b99f7e93fff2d">read</link>()&#32;|&#32;1)&#32;&amp;&#32;~0x10;&#32;<emphasis role="comment">//&#32;set&#32;LSB&#32;and&#32;clear&#32;5th&#32;bit</emphasis>
00182 &#32;&#32;&#32;&#32;<link linkend="_a19505_1a58fc9113701ffc04637996780c843ff0">commandPort</link>.<link linkend="_a19545_1a523b6a757b27418dc015ed13e74bef60">write</link>(0x60);&#32;<emphasis role="comment">//&#32;set&#32;state</emphasis>
00183 &#32;&#32;&#32;&#32;<link linkend="_a19505_1afd6cdddb62a2a2d2b31043eb32887b41">dataPort</link>.<link linkend="_a19545_1a523b6a757b27418dc015ed13e74bef60">write</link>(status);
00184 &#32;&#32;&#32;&#32;<link linkend="_a19505_1afd6cdddb62a2a2d2b31043eb32887b41">dataPort</link>.<link linkend="_a19545_1a523b6a757b27418dc015ed13e74bef60">write</link>(0xF4);
00185 &#32;&#32;&#32;&#32;<link linkend="_a18618_1a45ee52b918a784ff0e96e7c8917a91d9">basic::printf</link>(<emphasis role="stringliteral">&quot;Keyboard&#32;Driver&#32;activated!\n&quot;</emphasis>);
00186 }
</programlisting><para>
References <link linkend="_a18593_source_1l00306">basic::printf()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d7/d24/a19505_a58553d39d7dcfe6b55e8ddb1e7b1d187_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_a19505_1aaa7e99b6214dc8439230a95dd57e617e"/><section>
    <title>deactivate()</title>
<indexterm><primary>deactivate</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>deactivate</secondary></indexterm>
<para><computeroutput>void driver::KeyboardDriver::deactivate ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Deactivates the keyboard driver. (Stub) </para>
</para>
<para>
Implements <link linkend="_a19493_1a4b3b5e5a163c2c0e3cb58ea752ebcef1">driver::Driver</link>.</para>
<para>
Definition at line <link linkend="_a18605_source_1l00192">192</link> of file <link linkend="_a18605_source">kkeyboard.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00192 {}
</programlisting></section>
<anchor xml:id="_a19505_1a248fa0da9acac54a3a8880c7b66b3f2b"/><section>
    <title>handleInterrupt()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>handleInterrupt</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>handleInterrupt</secondary></indexterm>
<para><computeroutput>uint32_t driver::KeyboardDriver::handleInterrupt (uint32_t esp)<computeroutput>[override]</computeroutput></computeroutput></para><para>

<para>Handles the keyboard interrupt (IRQ 1). </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>esp</entry><entry>
<para>The stack pointer from the interrupt context. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The stack pointer. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_a18605_source_1l00034">34</link> of file <link linkend="_a18605_source">kkeyboard.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00035 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unshifted&#32;keys</emphasis>
00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;scancode_no_shift[]&#32;=&#32;{
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;&#32;&#32;0,&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;2&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;3&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;4&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;5&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;6&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;7&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;8&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;9&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;=&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;\b&apos;</emphasis>,
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;\t&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;q&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;w&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;e&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;r&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;t&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;y&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;u&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;i&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;o&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;p&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;[&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;]&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>,
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;s&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;d&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;f&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;g&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;h&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;j&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;k&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;l&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;;&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;\&apos;&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;`&apos;</emphasis>,&#32;0,
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;\\&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;z&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;x&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;c&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;v&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;b&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;n&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;m&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;,&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;.&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;/&apos;</emphasis>,&#32;0,&#32;<emphasis role="charliteral">&apos;*&apos;</emphasis>,&#32;0,
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,
00043 &#32;&#32;&#32;&#32;};
00044 
00045 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Shifted&#32;keys</emphasis>
00046 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;scancode_shifted[]&#32;=&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;&#32;&#32;0,&#32;<emphasis role="charliteral">&apos;!&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;@&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;#&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;$&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;%&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;^&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;&amp;&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;*&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;(&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;)&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;_&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;+&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;\b&apos;</emphasis>,
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;\t&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;Q&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;W&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;E&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;R&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;T&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;Y&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;U&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;I&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;O&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;P&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;{&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;}&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>,
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;<emphasis role="charliteral">&apos;A&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;S&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;D&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;F&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;G&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;H&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;J&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;K&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;L&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;:&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;&quot;&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;~&apos;</emphasis>,&#32;0,
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;|&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;Z&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;X&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;C&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;V&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;B&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;N&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;M&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;&lt;&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;&gt;&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;?&apos;</emphasis>,&#32;0,&#32;<emphasis role="charliteral">&apos;*&apos;</emphasis>,&#32;0,
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,
00053 &#32;&#32;&#32;&#32;};
00054 
00055 &#32;&#32;&#32;&#32;uint8_t&#32;scancode&#32;=&#32;<link linkend="_a19505_1afd6cdddb62a2a2d2b31043eb32887b41">dataPort</link>.<link linkend="_a19545_1ae8688251b574c3fd335b99f7e93fff2d">read</link>();
00056 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_a19505_1a11ec84b7abf113ec270f124564776e1f">keyboardEventHandler</link>==0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;esp;&#32;<emphasis role="comment">//if&#32;dont&#32;have&#32;any&#32;handler&#32;just&#32;return</emphasis>
00057 
00058 
00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;<link linkend="_a19505_1a703464394033a8f4f664d9289ae2e9f8">waiting_for_led_ack</link>)&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scancode&#32;==&#32;0xFA)&#32;{&#32;<emphasis role="comment">//&#32;Got&#32;ACK</emphasis>
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a19505_1afd6cdddb62a2a2d2b31043eb32887b41">dataPort</link>.<link linkend="_a19545_1a523b6a757b27418dc015ed13e74bef60">write</link>(this-&gt;<link linkend="_a19505_1aed7b5d279f6f1dffee10d5fb92ed6b1c">led_byte_to_send</link>);
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_a19505_1a703464394033a8f4f664d9289ae2e9f8">waiting_for_led_ack</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;we&#32;get&#32;something&#32;else,&#32;the&#32;keyboard&#32;is&#32;out&#32;of&#32;sync.</emphasis>
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&apos;ll&#32;just&#32;drop&#32;out&#32;of&#32;the&#32;ACK-waiting&#32;state&#32;and&#32;process</emphasis>
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;scancode&#32;normally&#32;(by&#32;falling&#32;through).</emphasis>
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_a19505_1a703464394033a8f4f664d9289ae2e9f8">waiting_for_led_ack</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00070 
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;we&#32;got&#32;the&#32;ACK,&#32;we&apos;re&#32;done&#32;for&#32;this&#32;interrupt.</emphasis>
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scancode&#32;==&#32;0xFA)&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;esp;
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00075 &#32;&#32;&#32;&#32;}
00076 
00077 
00078 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;for&#32;key&#32;release</emphasis>
00079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scancode&#32;&amp;&#32;0x80)&#32;{
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scancode&#32;-=&#32;0x80;&#32;
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(scancode)&#32;{
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x2A:&#32;<emphasis role="comment">//&#32;Left&#32;Shift&#32;Release</emphasis>
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x36:&#32;<emphasis role="comment">//&#32;Right&#32;Shift&#32;Release</emphasis>
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_a19505_1afba07c783deebfb275c1437f7c23601d">shift_pressed</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Handle&#32;release&#32;of&#32;all&#32;other&#32;keys</emphasis>
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;{
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;ascii&#32;=&#32;0;
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scancode&#32;&lt;&#32;<emphasis role="keyword">sizeof</emphasis>(scancode_no_shift))&#32;{
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;base_char&#32;=&#32;scancode_no_shift[scancode];
00093 
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Determine&#32;the&#32;character&#32;that&#32;was&#32;released&#32;based&#32;on&#32;the&#32;keyboard&#32;state</emphasis>
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base_char&#32;&gt;=&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>&#32;&amp;&amp;&#32;base_char&#32;&lt;=&#32;<emphasis role="charliteral">&apos;z&apos;</emphasis>)&#32;{
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;<link linkend="_a19505_1afba07c783deebfb275c1437f7c23601d">shift_pressed</link>&#32;^&#32;this-&gt;<link linkend="_a19505_1a8a63dbc25a08a75f62ae0674df1deb30">caps_on</link>)&#32;{
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ascii&#32;=&#32;scancode_shifted[scancode];
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ascii&#32;=&#32;base_char;
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;<link linkend="_a19505_1afba07c783deebfb275c1437f7c23601d">shift_pressed</link>)&#32;{
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ascii&#32;=&#32;scancode_shifted[scancode];
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ascii&#32;=&#32;base_char;
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ascii&#32;!=&#32;0)&#32;{
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a19505_1a11ec84b7abf113ec270f124564776e1f">keyboardEventHandler</link>-&gt;<link linkend="_a19501_1a28547100b7420e1f73b745df873cd411">onKeyUp</link>(ascii);
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00115 &#32;&#32;&#32;&#32;}&#32;
00116 
00117 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;for&#32;key&#32;press</emphasis>
00118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(scancode)&#32;{
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x2A:&#32;<emphasis role="comment">//&#32;Left&#32;Shift&#32;Press</emphasis>
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x36:&#32;<emphasis role="comment">//&#32;Right&#32;Shift&#32;Press</emphasis>
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_a19505_1afba07c783deebfb275c1437f7c23601d">shift_pressed</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00124 
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x3A:&#32;<emphasis role="comment">//&#32;Caps&#32;Lock&#32;Press</emphasis>
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_a19505_1a8a63dbc25a08a75f62ae0674df1deb30">caps_on</link>&#32;=&#32;!this-&gt;<link linkend="_a19505_1a8a63dbc25a08a75f62ae0674df1deb30">caps_on</link>;&#32;<emphasis role="comment">//&#32;Toggle&#32;the&#32;state</emphasis>
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prepare&#32;to&#32;send&#32;LED&#32;update</emphasis>
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_a19505_1aed7b5d279f6f1dffee10d5fb92ed6b1c">led_byte_to_send</link>&#32;=&#32;0;
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;<link linkend="_a19505_1a8a63dbc25a08a75f62ae0674df1deb30">caps_on</link>)&#32;this-&gt;<link linkend="_a19505_1aed7b5d279f6f1dffee10d5fb92ed6b1c">led_byte_to_send</link>&#32;|=&#32;0x04;&#32;<emphasis role="comment">//&#32;Bit&#32;2&#32;for&#32;Caps&#32;Lock&#32;LED</emphasis>
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a19505_1afd6cdddb62a2a2d2b31043eb32887b41">dataPort</link>.<link linkend="_a19545_1a523b6a757b27418dc015ed13e74bef60">write</link>(0xED);&#32;<emphasis role="comment">//&#32;Send&#32;&quot;Set&#32;LEDs&quot;&#32;command</emphasis>
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_a19505_1a703464394033a8f4f664d9289ae2e9f8">waiting_for_led_ack</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;&#32;<emphasis role="comment">//&#32;Set&#32;state&#32;to&#32;wait&#32;for&#32;ACK</emphasis>
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00135 
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;{
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;It&apos;s&#32;a&#32;printable&#32;key</emphasis>
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;ascii&#32;=&#32;0;
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scancode&#32;&lt;&#32;<emphasis role="keyword">sizeof</emphasis>(scancode_no_shift))&#32;{
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;base_char&#32;=&#32;scancode_no_shift[scancode];
00142 
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;it&apos;s&#32;an&#32;alphabet&#32;character</emphasis>
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base_char&#32;&gt;=&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>&#32;&amp;&amp;&#32;base_char&#32;&lt;=&#32;<emphasis role="charliteral">&apos;z&apos;</emphasis>)&#32;{
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;It&apos;s&#32;a&#32;letter.&#32;Apply&#32;Shift&#32;XOR&#32;Caps&#32;Lock</emphasis>
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(shift&#32;^&#32;caps)&#32;=&#32;true&#32;means&#32;capitalize</emphasis>
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;<link linkend="_a19505_1afba07c783deebfb275c1437f7c23601d">shift_pressed</link>&#32;^&#32;this-&gt;<link linkend="_a19505_1a8a63dbc25a08a75f62ae0674df1deb30">caps_on</link>)&#32;{
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ascii&#32;=&#32;scancode_shifted[scancode];&#32;<emphasis role="comment">//&#32;Uppercase</emphasis>
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ascii&#32;=&#32;base_char;&#32;<emphasis role="comment">//&#32;Lowercase</emphasis>
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;It&apos;s&#32;not&#32;a&#32;letter&#32;(number,&#32;symbol,&#32;etc.)</emphasis>
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;Shift&#32;applies</emphasis>
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;<link linkend="_a19505_1afba07c783deebfb275c1437f7c23601d">shift_pressed</link>)&#32;{
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ascii&#32;=&#32;scancode_shifted[scancode];
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ascii&#32;=&#32;base_char;
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a19505_1a11ec84b7abf113ec270f124564776e1f">keyboardEventHandler</link>-&gt;<link linkend="_a19501_1ae2b923ef0eb58e29f57a155debadac6a">onKeyDown</link>(ascii);
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00166 &#32;&#32;&#32;&#32;}
00167 
00168 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;esp;
00169 }
</programlisting><para>
References <link linkend="_a19501_1a28547100b7420e1f73b745df873cd411">driver::KeyboardEventHandler::onKeyUp()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d7/d24/a19505_a248fa0da9acac54a3a8880c7b66b3f2b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_a19529_1aa89d41d69840cb4f1c8692fa6ded28f4"/><section>
    <title>handleInterrupt()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>handleInterrupt</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>handleInterrupt</secondary></indexterm>
<para><computeroutput>virtual uintptr_t hardware_communication::InterruptHandler::handleInterrupt (uintptr_t esp)<computeroutput>[pure virtual]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_a18599_source_1l00185">hardware_communication::InterruptManager::handleInterrupt()</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../dd/d18/a19529_aa89d41d69840cb4f1c8692fa6ded28f4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_a19505_1a22b7b080ab1c8b0f2ed4beba75b34691"/><section>
    <title>reset()</title>
<indexterm><primary>reset</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>reset</secondary></indexterm>
<para><computeroutput>int driver::KeyboardDriver::reset ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Resets the keyboard. (Stub) </para>
</para>

<para><formalpara><title>Returns</title>

<para>Always returns 0. </para>
</formalpara>
</para>
<para>
Implements <link linkend="_a19493_1a98d2e779c02364fc58c172d0d2a32bdd">driver::Driver</link>.</para>
<para>
Definition at line <link linkend="_a18605_source_1l00190">190</link> of file <link linkend="_a18605_source">kkeyboard.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00190 {<emphasis role="keywordflow">return</emphasis>&#32;0;}
</programlisting></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_a19505_1a8a63dbc25a08a75f62ae0674df1deb30"/><section>
    <title>caps_on</title>
<indexterm><primary>caps_on</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>caps_on</secondary></indexterm>
<para><computeroutput>bool driver::KeyboardDriver::caps_on<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a18575_source_1l00026">26</link> of file <link linkend="_a18575_source">kkeyboard.hpp</link>.</para>
</section>
<anchor xml:id="_a19505_1a58fc9113701ffc04637996780c843ff0"/><section>
    <title>commandPort</title>
<indexterm><primary>commandPort</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>commandPort</secondary></indexterm>
<para><computeroutput><link linkend="_a19545">hardware_communication::Port8Bit</link> driver::KeyboardDriver::commandPort<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a18575_source_1l00022">22</link> of file <link linkend="_a18575_source">kkeyboard.hpp</link>.</para>
</section>
<anchor xml:id="_a19505_1afd6cdddb62a2a2d2b31043eb32887b41"/><section>
    <title>dataPort</title>
<indexterm><primary>dataPort</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>dataPort</secondary></indexterm>
<para><computeroutput><link linkend="_a19545">hardware_communication::Port8Bit</link> driver::KeyboardDriver::dataPort<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a18575_source_1l00021">21</link> of file <link linkend="_a18575_source">kkeyboard.hpp</link>.</para>
</section>
<anchor xml:id="_a19529_1ae86f4eae0ce9272b2027d44bdfd71e33"/><section>
    <title>interrupt_manager</title>
<indexterm><primary>interrupt_manager</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>interrupt_manager</secondary></indexterm>
<para><computeroutput><link linkend="_a18569_1a6c5563315b1a2f5c67ae8b78d06e3c7f">InterruptManager</link>* hardware_communication::InterruptHandler::interrupt_manager<computeroutput>[protected]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a18569_source_1l00025">25</link> of file <link linkend="_a18569_source">kinterrupt.hpp</link>.</para>
<para>
Referenced by <link linkend="_a18599_source_1l00006">hardware_communication::InterruptHandler::InterruptHandler()</link>.</para>
</section>
<anchor xml:id="_a19529_1afeede822d3e98957e76e627a54ec2f7a"/><section>
    <title>interruptNumber</title>
<indexterm><primary>interruptNumber</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>interruptNumber</secondary></indexterm>
<para><computeroutput>uint8_t hardware_communication::InterruptHandler::interruptNumber<computeroutput>[protected]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a18569_source_1l00024">24</link> of file <link linkend="_a18569_source">kinterrupt.hpp</link>.</para>
<para>
Referenced by <link linkend="_a18599_source_1l00006">hardware_communication::InterruptHandler::InterruptHandler()</link>.</para>
</section>
<anchor xml:id="_a19505_1a11ec84b7abf113ec270f124564776e1f"/><section>
    <title>keyboardEventHandler</title>
<indexterm><primary>keyboardEventHandler</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>keyboardEventHandler</secondary></indexterm>
<para><computeroutput><link linkend="_a19501">KeyboardEventHandler</link>* driver::KeyboardDriver::keyboardEventHandler<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a18575_source_1l00030">30</link> of file <link linkend="_a18575_source">kkeyboard.hpp</link>.</para>
<para>
Referenced by <link linkend="_a18605_source_1l00018">KeyboardDriver()</link>.</para>
</section>
<anchor xml:id="_a19505_1aed7b5d279f6f1dffee10d5fb92ed6b1c"/><section>
    <title>led_byte_to_send</title>
<indexterm><primary>led_byte_to_send</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>led_byte_to_send</secondary></indexterm>
<para><computeroutput>uint8_t driver::KeyboardDriver::led_byte_to_send<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a18575_source_1l00028">28</link> of file <link linkend="_a18575_source">kkeyboard.hpp</link>.</para>
</section>
<anchor xml:id="_a19505_1afba07c783deebfb275c1437f7c23601d"/><section>
    <title>shift_pressed</title>
<indexterm><primary>shift_pressed</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>shift_pressed</secondary></indexterm>
<para><computeroutput>bool driver::KeyboardDriver::shift_pressed<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a18575_source_1l00024">24</link> of file <link linkend="_a18575_source">kkeyboard.hpp</link>.</para>
</section>
<anchor xml:id="_a19505_1a703464394033a8f4f664d9289ae2e9f8"/><section>
    <title>waiting_for_led_ack</title>
<indexterm><primary>waiting_for_led_ack</primary><secondary>driver::KeyboardDriver</secondary></indexterm>
<indexterm><primary>driver::KeyboardDriver</primary><secondary>waiting_for_led_ack</secondary></indexterm>
<para><computeroutput>bool driver::KeyboardDriver::waiting_for_led_ack<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_a18575_source_1l00027">27</link> of file <link linkend="_a18575_source">kkeyboard.hpp</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
/home/shreekar/Desktop/Building_own_OS/OSOS/libk_header/driver/<link linkend="_a18575">kkeyboard.hpp</link>/home/shreekar/Desktop/Building_own_OS/OSOS/libk_src/driver/<link linkend="_a18605">kkeyboard.cpp</link></section>
</section>
