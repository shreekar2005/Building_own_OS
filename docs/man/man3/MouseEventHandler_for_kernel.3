.TH "MouseEventHandler_for_kernel" 3 "Fri Oct 24 2025 10:32:01" "OSOS - Documentation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MouseEventHandler_for_kernel \- Custom mouse event handler implementation for the kernel\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBdriver::MouseEventHandler\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMouseEventHandler_for_kernel\fP ()"
.br
.RI "Construct a new \fBMouseEventHandler_for_kernel\fP object\&. "
.ti -1c
.RI "\fB~MouseEventHandler_for_kernel\fP ()"
.br
.RI "Destroy the \fBMouseEventHandler_for_kernel\fP object\&. "
.ti -1c
.RI "void \fBonMouseDown\fP (uint8_t button) override"
.br
.RI "Handles mouse button down events\&. "
.ti -1c
.RI "void \fBonMouseMove\fP (int8_t delta_x, int8_t delta_y) override"
.br
.RI "Handles mouse movement events and updates the cursor position on the screen\&. "
.ti -1c
.RI "void \fBonMouseUp\fP (uint8_t button) override"
.br
.RI "Handles mouse button up events\&. "
.in -1c
.SH "Detailed Description"
.PP 
Custom mouse event handler implementation for the kernel\&. 
.PP
Definition at line \fB35\fP of file \fBkernel\&.cpp\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "MouseEventHandler_for_kernel::MouseEventHandler_for_kernel ()\fC [inline]\fP"

.PP
Construct a new \fBMouseEventHandler_for_kernel\fP object\&. 
.PP
Definition at line \fB38\fP of file \fBkernel\&.cpp\fP\&..PP
.nf
38 {}
.fi

.SS "MouseEventHandler_for_kernel::~MouseEventHandler_for_kernel ()\fC [inline]\fP"

.PP
Destroy the \fBMouseEventHandler_for_kernel\fP object\&. 
.PP
Definition at line \fB40\fP of file \fBkernel\&.cpp\fP\&..PP
.nf
40 {}
.fi

.SH "Member Function Documentation"
.PP 
.SS "void MouseEventHandler_for_kernel::onMouseDown (uint8_t button)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Handles mouse button down events\&. 
.PP
\fBParameters\fP
.RS 4
\fIbutton\fP The button number that was pressed\&. 
.RE
.PP

.PP
Implements \fBdriver::MouseEventHandler\fP\&.
.PP
Definition at line \fB44\fP of file \fBkernel\&.cpp\fP\&..PP
.nf
44                                                   {
45             (void) button;
46             basic::update_cursor(driver::MouseDriver::__mouse_x_, driver::MouseDriver::__mouse_y_);
47             // printf("Mouse Down: %d\\n", button);
48         }
.fi

.PP
References \fBdriver::MouseDriver::__mouse_x_\fP, \fBdriver::MouseDriver::__mouse_y_\fP, and \fBbasic::update_cursor()\fP\&.
.SS "void MouseEventHandler_for_kernel::onMouseMove (int8_t delta_x, int8_t delta_y)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Handles mouse movement events and updates the cursor position on the screen\&. 
.PP
\fBParameters\fP
.RS 4
\fIdelta_x\fP The change in the x-coordinate\&. 
.br
\fIdelta_y\fP The change in the y-coordinate\&. 
.RE
.PP

.PP
Implements \fBdriver::MouseEventHandler\fP\&.
.PP
Definition at line \fB60\fP of file \fBkernel\&.cpp\fP\&..PP
.nf
60                                                                   {
61             static uint16_t* video_memory = (uint16_t*) 0xb8000;
62             static float deltaTod=0\&.2;
63             static float dx=0, dy=0;
64             dx+=delta_x*deltaTod;
65             dy+=delta_y*deltaTod;
66 
67             // Restore the character that was previously under the mouse pointer
68             if (driver::MouseDriver::__mouse_x_ >= 0 && driver::MouseDriver::__mouse_y_ >= 0) {
69                 video_memory[80 * driver::MouseDriver::__mouse_y_ + driver::MouseDriver::__mouse_x_] = driver::MouseDriver::old_char_under_mouse_pointer;
70             }
71             // Update mouse coordinates based on delta
72             if(dx > 1) {
73                 driver::MouseDriver::__mouse_x_++;
74                 dx=0;
75             }
76             else if(dx < \-1) {
77                 driver::MouseDriver::__mouse_x_\-\-;
78                 dx=0;
79             }
80             
81             if(dy > 1) {
82                 driver::MouseDriver::__mouse_y_++;
83                 dy=0;
84             }
85             else if(dy < \-1) {
86                 driver::MouseDriver::__mouse_y_\-\-;
87                 dy=0;
88             }
89 
90             // Clamp coordinates to screen boundaries
91             if(driver::MouseDriver::__mouse_x_ < 0) driver::MouseDriver::__mouse_x_ = 0;
92             if(driver::MouseDriver::__mouse_x_ >= 80) driver::MouseDriver::__mouse_x_ = 79;
93             if(driver::MouseDriver::__mouse_y_ < 0) driver::MouseDriver::__mouse_y_ = 0;
94             if(driver::MouseDriver::__mouse_y_ >= 25) driver::MouseDriver::__mouse_y_ = 24;
95 
96             // Save the character at the new position and draw the pointer over it
97             driver::MouseDriver::old_char_under_mouse_pointer = video_memory[80 * driver::MouseDriver::__mouse_y_ + driver::MouseDriver::__mouse_x_];
98             video_memory[80 * driver::MouseDriver::__mouse_y_ + driver::MouseDriver::__mouse_x_] = driver::MouseDriver::mouse_block_video_mem_value(driver::MouseDriver::old_char_under_mouse_pointer, MOUSE_POINTER_COLOR);
99         }
.fi

.PP
References \fBdriver::MouseDriver::__mouse_x_\fP, \fBdriver::MouseDriver::__mouse_y_\fP, \fBdriver::MouseDriver::mouse_block_video_mem_value()\fP, \fBMOUSE_POINTER_COLOR\fP, and \fBdriver::MouseDriver::old_char_under_mouse_pointer\fP\&.
.SS "void MouseEventHandler_for_kernel::onMouseUp (uint8_t button)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Handles mouse button up events\&. 
.PP
\fBParameters\fP
.RS 4
\fIbutton\fP The button number that was released\&. 
.RE
.PP

.PP
Implements \fBdriver::MouseEventHandler\fP\&.
.PP
Definition at line \fB52\fP of file \fBkernel\&.cpp\fP\&..PP
.nf
52                                                 {
53             (void) button;
54             // printf("Mouse Up: %d\\n", button);
55         }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for OSOS - Documentation from the source code\&.
