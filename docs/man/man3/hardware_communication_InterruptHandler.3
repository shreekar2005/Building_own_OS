.TH "hardware_communication::InterruptHandler" 3 "Fri Oct 24 2025 10:32:01" "OSOS - Documentation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hardware_communication::InterruptHandler \- Base class (interface) for handling specific CPU interrupts\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include 'kinterrupt\&.hpp'\fP
.PP
Inherited by \fBdriver::KeyboardDriver\fP, and \fBdriver::MouseDriver\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual uintptr_t \fBhandleInterrupt\fP (uintptr_t esp)=0"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBInterruptHandler\fP (uint8_t \fBinterruptNumber\fP, \fBInterruptManager\fP *\fBinterrupt_manager\fP)"
.br
.RI "Constructs an \fBInterruptHandler\fP, registering it with the \fBInterruptManager\fP\&. "
.ti -1c
.RI "\fB~InterruptHandler\fP ()"
.br
.RI "Destroys the \fBInterruptHandler\fP, unregistering it from the \fBInterruptManager\fP if it's still the active handler\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBInterruptManager\fP * \fBinterrupt_manager\fP"
.br
.ti -1c
.RI "uint8_t \fBinterruptNumber\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Base class (interface) for handling specific CPU interrupts\&. 
.PP
Definition at line \fB22\fP of file \fBkinterrupt\&.hpp\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "hardware_communication::InterruptHandler::InterruptHandler (uint8_t interruptNumber, \fBhardware_communication::InterruptManager\fP * interrupt_manager)\fC [protected]\fP"

.PP
Constructs an \fBInterruptHandler\fP, registering it with the \fBInterruptManager\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIinterruptNumber\fP The number of the interrupt (0-255) this handler serves\&. 
.br
\fIinterrupt_manager\fP A pointer to the \fBInterruptManager\fP instance\&. 
.RE
.PP

.PP
Definition at line \fB6\fP of file \fBkinterrupt\&.cpp\fP\&..PP
.nf
6                                                                                                                                           {
7     this\->interruptNumber=interruptNumber;
8     this\->interrupt_manager=interrupt_manager;
9     interrupt_manager\->handlers[interruptNumber]=this;
10 }
.fi

.PP
References \fBhardware_communication::InterruptManager::handlers\fP, \fBinterrupt_manager\fP, and \fBinterruptNumber\fP\&.
.SS "hardware_communication::InterruptHandler::~InterruptHandler ()\fC [protected]\fP"

.PP
Destroys the \fBInterruptHandler\fP, unregistering it from the \fBInterruptManager\fP if it's still the active handler\&. 
.PP
Definition at line \fB12\fP of file \fBkinterrupt\&.cpp\fP\&..PP
.nf
12                                                          {
13     if(interrupt_manager\->handlers[interruptNumber]==this) interrupt_manager\->handlers[interruptNumber]=nullptr;
14 }
.fi

.SH "Member Function Documentation"
.PP 
.SS "virtual uintptr_t hardware_communication::InterruptHandler::handleInterrupt (uintptr_t esp)\fC [pure virtual]\fP"

.PP
Referenced by \fBhardware_communication::InterruptManager::handleInterrupt()\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBInterruptManager\fP* hardware_communication::InterruptHandler::interrupt_manager\fC [protected]\fP"

.PP
Definition at line \fB25\fP of file \fBkinterrupt\&.hpp\fP\&.
.PP
Referenced by \fBInterruptHandler()\fP\&.
.SS "uint8_t hardware_communication::InterruptHandler::interruptNumber\fC [protected]\fP"

.PP
Definition at line \fB24\fP of file \fBkinterrupt\&.hpp\fP\&.
.PP
Referenced by \fBInterruptHandler()\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for OSOS - Documentation from the source code\&.
